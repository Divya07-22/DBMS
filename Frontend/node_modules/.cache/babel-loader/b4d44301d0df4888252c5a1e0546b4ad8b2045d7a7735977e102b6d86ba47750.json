{"ast":null,"code":"\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const FormSection = ({ title, fields, data, setData, endpoint }) => {\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(endpoint, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(data),\n//       });\n\n//       if (response.ok) {\n//         alert(`${title} submitted successfully!`);\n//         setData({});\n//       } else {\n//         try {\n//           const errorData = await response.json();\n//           alert(\n//             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\n//           );\n//         } catch (parseError) {\n//           alert(`Failed to submit ${title}: ${response.statusText}`);\n//         }\n//       }\n//     } catch (error) {\n//       console.error(`Error submitting ${title}:`, error);\n//       alert(`An error occurred while submitting ${title}.`);\n//     }\n//   };\n\n//   const styles = {\n//     inputField: {\n//       margin: \"10px 0\",\n//       padding: \"10px\",\n//       borderRadius: \"4px\",\n//       border: \"1px solid #ddd\",\n//       width: \"100%\",\n//       boxSizing: \"border-box\",\n//     },\n//     button: {\n//       backgroundColor: \"#007bff\",\n//       color: \"white\",\n//       padding: \"10px 15px\",\n//       border: \"none\",\n//       borderRadius: \"4px\",\n//       cursor: \"pointer\",\n//       transition: \"background-color 0.3s ease\",\n//     },\n//     container: {\n//       borderRadius: \"8px\",\n//       boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n//       padding: \"20px\",\n//       maxWidth: \"600px\",\n//       margin: \"20px auto\",\n//       backgroundColor: \"#f9f9f9\",\n//     },\n//     errorMessage: {\n//       color: \"red\",\n//       fontSize: \"12px\",\n//     },\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>{title}</h2>\n//       <form onSubmit={handleSubmit}>\n//         {fields.map((field) => (\n//           <div key={field.key} style={{ marginBottom: \"10px\" }}>\n//             <label>{field.label}:</label>\n//             <input\n//               type=\"text\"\n//               value={data[field.key] || \"\"}\n//               onChange={(e) =>\n//                 setData({ ...data, [field.key]: e.target.value })\n//               }\n//               style={styles.inputField}\n//               required\n//             />\n//           </div>\n//         ))}\n//         <button\n//           type=\"submit\"\n//           style={styles.button}\n//           onMouseOver={(e) => (e.target.style.backgroundColor = \"#0056b3\")}\n//           onMouseOut={(e) => (e.target.style.backgroundColor = \"#007bff\")}\n//         >\n//           Submit {title}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const Tables = () => {\n//   const [recruiter, setRecruiter] = useState({});\n//   const [skill, setSkill] = useState({});\n//   const [internship, setInternship] = useState({});\n//   const [interview, setInterview] = useState({});\n//   const [placement, setPlacement] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     navigate(\"/student-details\");\n//   };\n\n//   const styles = {\n//     logoutButton: {\n//       padding: \"10px 15px\",\n//       backgroundColor: \"#dc3545\",\n//       color: \"white\",\n//       border: \"none\",\n//       borderRadius: \"4px\",\n//       cursor: \"pointer\",\n//       marginTop: \"20px\",\n//       transition: \"background-color 0.3s ease\",\n//     },\n//   };\n\n//   return (\n//     <div>\n//       <FormSection\n//         title=\"Recruiter Details\"\n//         fields={[\n//           { key: \"companyName\", label: \"Company Name\" },\n//           { key: \"contactPerson\", label: \"Contact Person\" },\n//           { key: \"contactEmail\", label: \"Contact Email\" },\n//           { key: \"contactPhone\", label: \"Contact Phone\" },\n//           { key: \"location\", label: \"Location\" },\n//         ]}\n//         data={recruiter}\n//         setData={setRecruiter}\n//         endpoint=\"http://localhost:5000/api/recruiters\"\n//       />\n//       <FormSection\n//         title=\"Skill Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"skill_name\", label: \"Skill Name\" },\n//           { key: \"skill_category\", label: \"Skill Category\" },\n//         ]}\n//         data={skill}\n//         setData={setSkill}\n//         endpoint=\"http://localhost:5000/api/skills\"\n//       />\n//       <FormSection\n//         title=\"Internship Details\"\n//         fields={[\n//           { key: \"title\", label: \"Title\" },\n//           { key: \"description\", label: \"Description\" },\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\n//           { key: \"location\", label: \"Location\" },\n//           { key: \"duration\", label: \"Duration\" },\n//           { key: \"stipend\", label: \"Stipend\" },\n//           { key: \"skills_required\", label: \"Skills Required\" },\n//           { key: \"application_deadline\", label: \"Application Deadline\" },\n//         ]}\n//         data={internship}\n//         setData={setInternship}\n//         endpoint=\"http://localhost:5000/api/internships\"\n//       />\n//       <FormSection\n//         title=\"Interview Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\n//           { key: \"interview_result\", label: \"Interview Result\" },\n//           { key: \"interview_date\", label: \"Interview Date\" },\n//           { key: \"interview_mode\", label: \"Interview Mode\" },\n//           { key: \"feedback\", label: \"Feedback\" },\n//           { key: \"interviewer_name\", label: \"Interview Name\" },\n//         ]}\n//         data={interview}\n//         setData={setInterview}\n//         endpoint=\"http://localhost:5000/api/interviews\"\n//       />\n//       <FormSection\n//         title=\"Placement Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"company_name\", label: \"Company Name\" },\n//           { key: \"job_title\", label: \"Job Title\" },\n//           { key: \"date_of_placement\", label: \"Date of Placement\" },\n//           { key: \"salary_package\", label: \"Salary\" },\n//           { key: \"placed\", label: \"Placed\" },\n//           { key: \"location\", label: \"Location\" },\n//         ]}\n//         data={placement}\n//         setData={setPlacement}\n//         endpoint=\"http://localhost:5000/api/placements\"\n//       />\n//       <button\n//         onClick={handleLogout}\n//         style={styles.logoutButton}\n//         onMouseOver={(e) => (e.target.style.backgroundColor = \"#bd2130\")}\n//         onMouseOut={(e) => (e.target.style.backgroundColor = \"#dc3545\")}\n//       >\n//         Logout\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Tables;\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const FormSection = ({ title, fields, data, setData, endpoint }) => {\n//   const [containerHovered, setContainerHovered] = useState(false);\n//   const [buttonHovered, setButtonHovered] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(endpoint, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(data),\n//       });\n\n//       if (response.ok) {\n//         alert(`${title} submitted successfully!`);\n//         setData({});\n//       } else {\n//         try {\n//           const errorData = await response.json();\n//           alert(\n//             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\n//           );\n//         } catch (parseError) {\n//           alert(`Failed to submit ${title}: ${response.statusText}`);\n//         }\n//       }\n//     } catch (error) {\n//       console.error(`Error submitting ${title}:`, error);\n//       alert(`An error occurred while submitting ${title}.`);\n//     }\n//   };\n\n//   const styles = {\n//     inputField: {\n//       margin: \"10px 0\",\n//       padding: \"15px\",\n//       borderRadius: \"8px\",\n//       border: \"1px solid #e0e0e0\",\n//       width: \"100%\",\n//       boxSizing: \"border-box\",\n//       fontSize: \"16px\",\n//       transition: \"all 0.3s ease\",\n//       background: \"#f8f9fa\",\n//     },\n//     button: {\n//       backgroundColor: \"#4361ee\",\n//       color: \"white\",\n//       padding: \"12px 25px\",\n//       border: \"none\",\n//       borderRadius: \"8px\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\n//       fontSize: \"16px\",\n//       fontWeight: \"600\",\n//       letterSpacing: \"0.5px\",\n//       boxShadow: \"0 4px 6px rgba(67, 97, 238, 0.3)\",\n//     },\n//     container: {\n//       borderRadius: \"16px\",\n//       boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.08)\",\n//       padding: \"30px\",\n//       maxWidth: \"650px\",\n//       margin: \"25px auto\",\n//       backgroundColor: \"white\",\n//       transition: \"all 0.4s ease\",\n//       transform: containerHovered ? \"translateY(-5px)\" : \"translateY(0)\",\n//       border: \"1px solid #f0f0f0\",\n//     },\n//     label: {\n//       display: \"block\",\n//       marginBottom: \"8px\",\n//       fontWeight: \"500\",\n//       color: \"#333\",\n//       fontSize: \"15px\",\n//     },\n//   };\n\n//   return (\n//     <div \n//       style={styles.container}\n//       onMouseEnter={() => setContainerHovered(true)}\n//       onMouseLeave={() => setContainerHovered(false)}\n//     >\n//       <h2 style={{\n//         marginTop: 0,\n//         marginBottom: \"25px\",\n//         color: \"#4361ee\",\n//         fontSize: \"28px\",\n//         fontWeight: \"700\",\n//         textAlign: \"center\",\n//         position: \"relative\",\n//         paddingBottom: \"15px\",\n//       }}>\n//         {title}\n//         <div style={{\n//           position: \"absolute\",\n//           bottom: 0,\n//           left: \"50%\",\n//           transform: \"translateX(-50%)\",\n//           width: \"80px\",\n//           height: \"4px\",\n//           background: \"linear-gradient(90deg, #4361ee, #3a0ca3)\",\n//           borderRadius: \"2px\",\n//         }}></div>\n//       </h2>\n\n//       <form onSubmit={handleSubmit}>\n//         {fields.map((field) => (\n//           <div key={field.key} style={{ marginBottom: \"20px\" }}>\n//             <label style={styles.label}>{field.label}:</label>\n//             <input\n//               type=\"text\"\n//               value={data[field.key] || \"\"}\n//               onChange={(e) =>\n//                 setData({ ...data, [field.key]: e.target.value })\n//               }\n//               style={styles.inputField}\n//               onFocus={(e) => {\n//                 e.target.style.borderColor = \"#4361ee\";\n//                 e.target.style.boxShadow = \"0 0 0 3px rgba(67, 97, 238, 0.2)\";\n//               }}\n//               onBlur={(e) => {\n//                 e.target.style.borderColor = \"#e0e0e0\";\n//                 e.target.style.boxShadow = \"none\";\n//               }}\n//               required\n//               placeholder={`Enter ${field.label.toLowerCase()}...`}\n//             />\n//           </div>\n//         ))}\n//         <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\n//           <button\n//             type=\"submit\"\n//             style={{\n//               ...styles.button,\n//               backgroundColor: buttonHovered ? \"#3a0ca3\" : \"#4361ee\",\n//               transform: buttonHovered ? \"scale(1.05)\" : \"scale(1)\",\n//               boxShadow: buttonHovered \n//                 ? \"0 7px 14px rgba(67, 97, 238, 0.4)\" \n//                 : \"0 4px 6px rgba(67, 97, 238, 0.3)\",\n//             }}\n//             onMouseEnter={() => setButtonHovered(true)}\n//             onMouseLeave={() => setButtonHovered(false)}\n//           >\n//             Submit {title}\n//             <span style={{ marginLeft: \"8px\", transition: \"transform 0.3s ease\" }}>\n//               {buttonHovered ? \"🚀\" : \"📝\"}\n//             </span>\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const Tables = () => {\n//   const [recruiter, setRecruiter] = useState({});\n//   const [skill, setSkill] = useState({});\n//   const [internship, setInternship] = useState({});\n//   const [interview, setInterview] = useState({});\n//   const [placement, setPlacement] = useState({});\n//   const navigate = useNavigate();\n\n//   const [logoutHovered, setLogoutHovered] = useState(false);\n\n//   const handleLogout = () => {\n//     navigate(\"/student-details\");\n//   };\n\n//   const styles = {\n//     logoutButton: {\n//       padding: \"14px 30px\",\n//       backgroundColor: \"#f72585\",\n//       color: \"white\",\n//       border: \"none\",\n//       borderRadius: \"10px\",\n//       cursor: \"pointer\",\n//       margin: \"30px auto 40px\",\n//       display: \"block\",\n//       fontSize: \"16px\",\n//       fontWeight: \"600\",\n//       letterSpacing: \"0.5px\",\n//       boxShadow: \"0 4px 6px rgba(247, 37, 133, 0.3)\",\n//       transition: \"all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\n//     },\n//     container: {\n//       maxWidth: \"800px\",\n//       margin: \"0 auto\",\n//       padding: \"20px\",\n//       background: \"linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)\",\n//       minHeight: \"100vh\",\n//     },\n//     header: {\n//       textAlign: \"center\",\n//       padding: \"30px 0 10px\",\n//       color: \"#3a0ca3\",\n//       fontSize: \"2.8rem\",\n//       fontWeight: \"800\",\n//       textShadow: \"2px 2px 4px rgba(0,0,0,0.1)\",\n//       marginBottom: \"10px\",\n//       background: \"linear-gradient(90deg, #4361ee, #7209b7)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//     },\n//     subtitle: {\n//       textAlign: \"center\",\n//       color: \"#6c757d\",\n//       fontSize: \"1.2rem\",\n//       marginBottom: \"40px\",\n//       fontWeight: \"400\",\n//     },\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h1 style={styles.header}>Campus Placement Portal</h1>\n//       <p style={styles.subtitle}>Manage all placement-related information in one place</p>\n\n//       <FormSection\n//         title=\"Recruiter Details\"\n//         fields={[\n//           { key: \"companyName\", label: \"Company Name\" },\n//           { key: \"contactPerson\", label: \"Contact Person\" },\n//           { key: \"contactEmail\", label: \"Contact Email\" },\n//           { key: \"contactPhone\", label: \"Contact Phone\" },\n//           { key: \"location\", label: \"Location\" },\n//         ]}\n//         data={recruiter}\n//         setData={setRecruiter}\n//         endpoint=\"http://localhost:5000/api/recruiters\"\n//       />\n\n//       <FormSection\n//         title=\"Skill Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"skill_name\", label: \"Skill Name\" },\n//           { key: \"skill_category\", label: \"Skill Category\" },\n//         ]}\n//         data={skill}\n//         setData={setSkill}\n//         endpoint=\"http://localhost:5000/api/skills\"\n//       />\n\n//       <FormSection\n//         title=\"Internship Details\"\n//         fields={[\n//           { key: \"title\", label: \"Title\" },\n//           { key: \"description\", label: \"Description\" },\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\n//           { key: \"location\", label: \"Location\" },\n//           { key: \"duration\", label: \"Duration\" },\n//           { key: \"stipend\", label: \"Stipend\" },\n//           { key: \"skills_required\", label: \"Skills Required\" },\n//           { key: \"application_deadline\", label: \"Application Deadline\" },\n//         ]}\n//         data={internship}\n//         setData={setInternship}\n//         endpoint=\"http://localhost:5000/api/internships\"\n//       />\n\n//       <FormSection\n//         title=\"Interview Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\n//           { key: \"interview_result\", label: \"Interview Result\" },\n//           { key: \"interview_date\", label: \"Interview Date\" },\n//           { key: \"interview_mode\", label: \"Interview Mode\" },\n//           { key: \"feedback\", label: \"Feedback\" },\n//           { key: \"interviewer_name\", label: \"Interview Name\" },\n//         ]}\n//         data={interview}\n//         setData={setInterview}\n//         endpoint=\"http://localhost:5000/api/interviews\"\n//       />\n\n//       <FormSection\n//         title=\"Placement Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"company_name\", label: \"Company Name\" },\n//           { key: \"job_title\", label: \"Job Title\" },\n//           { key: \"date_of_placement\", label: \"Date of Placement\" },\n//           { key: \"salary_package\", label: \"Salary\" },\n//           { key: \"placed\", label: \"Placed\" },\n//           { key: \"location\", label: \"Location\" },\n//         ]}\n//         data={placement}\n//         setData={setPlacement}\n//         endpoint=\"http://localhost:5000/api/placements\"\n//       />\n\n//       <button\n//         onClick={handleLogout}\n//         style={{\n//           ...styles.logoutButton,\n//           backgroundColor: logoutHovered ? \"#b5179e\" : \"#f72585\",\n//           transform: logoutHovered ? \"scale(1.05)\" : \"scale(1)\",\n//           boxShadow: logoutHovered \n//             ? \"0 7px 14px rgba(247, 37, 133, 0.4)\" \n//             : \"0 4px 6px rgba(247, 37, 133, 0.3)\",\n//         }}\n//         onMouseEnter={() => setLogoutHovered(true)}\n//         onMouseLeave={() => setLogoutHovered(false)}\n//       >\n//         {logoutHovered ? \"👋 Logging Out...\" : \"🚪 Logout\"}\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Tables;","map":{"version":3,"names":[],"sources":["C:/Users/HP/Desktop/DB/DBMS/Frontend/src/pages/student/Tables.js"],"sourcesContent":["\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const FormSection = ({ title, fields, data, setData, endpoint }) => {\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(endpoint, {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n      \r\n//       if (response.ok) {\r\n//         alert(`${title} submitted successfully!`);\r\n//         setData({});\r\n//       } else {\r\n//         try {\r\n//           const errorData = await response.json();\r\n//           alert(\r\n//             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\r\n//           );\r\n//         } catch (parseError) {\r\n//           alert(`Failed to submit ${title}: ${response.statusText}`);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(`Error submitting ${title}:`, error);\r\n//       alert(`An error occurred while submitting ${title}.`);\r\n//     }\r\n//   };\r\n\r\n//   const styles = {\r\n//     inputField: {\r\n//       margin: \"10px 0\",\r\n//       padding: \"10px\",\r\n//       borderRadius: \"4px\",\r\n//       border: \"1px solid #ddd\",\r\n//       width: \"100%\",\r\n//       boxSizing: \"border-box\",\r\n//     },\r\n//     button: {\r\n//       backgroundColor: \"#007bff\",\r\n//       color: \"white\",\r\n//       padding: \"10px 15px\",\r\n//       border: \"none\",\r\n//       borderRadius: \"4px\",\r\n//       cursor: \"pointer\",\r\n//       transition: \"background-color 0.3s ease\",\r\n//     },\r\n//     container: {\r\n//       borderRadius: \"8px\",\r\n//       boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n//       padding: \"20px\",\r\n//       maxWidth: \"600px\",\r\n//       margin: \"20px auto\",\r\n//       backgroundColor: \"#f9f9f9\",\r\n//     },\r\n//     errorMessage: {\r\n//       color: \"red\",\r\n//       fontSize: \"12px\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>{title}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {fields.map((field) => (\r\n//           <div key={field.key} style={{ marginBottom: \"10px\" }}>\r\n//             <label>{field.label}:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={data[field.key] || \"\"}\r\n//               onChange={(e) =>\r\n//                 setData({ ...data, [field.key]: e.target.value })\r\n//               }\r\n//               style={styles.inputField}\r\n//               required\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={styles.button}\r\n//           onMouseOver={(e) => (e.target.style.backgroundColor = \"#0056b3\")}\r\n//           onMouseOut={(e) => (e.target.style.backgroundColor = \"#007bff\")}\r\n//         >\r\n//           Submit {title}\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Tables = () => {\r\n//   const [recruiter, setRecruiter] = useState({});\r\n//   const [skill, setSkill] = useState({});\r\n//   const [internship, setInternship] = useState({});\r\n//   const [interview, setInterview] = useState({});\r\n//   const [placement, setPlacement] = useState({});\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogout = () => {\r\n//     navigate(\"/student-details\");\r\n//   };\r\n\r\n//   const styles = {\r\n//     logoutButton: {\r\n//       padding: \"10px 15px\",\r\n//       backgroundColor: \"#dc3545\",\r\n//       color: \"white\",\r\n//       border: \"none\",\r\n//       borderRadius: \"4px\",\r\n//       cursor: \"pointer\",\r\n//       marginTop: \"20px\",\r\n//       transition: \"background-color 0.3s ease\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <FormSection\r\n//         title=\"Recruiter Details\"\r\n//         fields={[\r\n//           { key: \"companyName\", label: \"Company Name\" },\r\n//           { key: \"contactPerson\", label: \"Contact Person\" },\r\n//           { key: \"contactEmail\", label: \"Contact Email\" },\r\n//           { key: \"contactPhone\", label: \"Contact Phone\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//         ]}\r\n//         data={recruiter}\r\n//         setData={setRecruiter}\r\n//         endpoint=\"http://localhost:5000/api/recruiters\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Skill Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"skill_name\", label: \"Skill Name\" },\r\n//           { key: \"skill_category\", label: \"Skill Category\" },\r\n//         ]}\r\n//         data={skill}\r\n//         setData={setSkill}\r\n//         endpoint=\"http://localhost:5000/api/skills\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Internship Details\"\r\n//         fields={[\r\n//           { key: \"title\", label: \"Title\" },\r\n//           { key: \"description\", label: \"Description\" },\r\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//           { key: \"duration\", label: \"Duration\" },\r\n//           { key: \"stipend\", label: \"Stipend\" },\r\n//           { key: \"skills_required\", label: \"Skills Required\" },\r\n//           { key: \"application_deadline\", label: \"Application Deadline\" },\r\n//         ]}\r\n//         data={internship}\r\n//         setData={setInternship}\r\n//         endpoint=\"http://localhost:5000/api/internships\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Interview Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n//           { key: \"interview_result\", label: \"Interview Result\" },\r\n//           { key: \"interview_date\", label: \"Interview Date\" },\r\n//           { key: \"interview_mode\", label: \"Interview Mode\" },\r\n//           { key: \"feedback\", label: \"Feedback\" },\r\n//           { key: \"interviewer_name\", label: \"Interview Name\" },\r\n//         ]}\r\n//         data={interview}\r\n//         setData={setInterview}\r\n//         endpoint=\"http://localhost:5000/api/interviews\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Placement Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"company_name\", label: \"Company Name\" },\r\n//           { key: \"job_title\", label: \"Job Title\" },\r\n//           { key: \"date_of_placement\", label: \"Date of Placement\" },\r\n//           { key: \"salary_package\", label: \"Salary\" },\r\n//           { key: \"placed\", label: \"Placed\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//         ]}\r\n//         data={placement}\r\n//         setData={setPlacement}\r\n//         endpoint=\"http://localhost:5000/api/placements\"\r\n//       />\r\n//       <button\r\n//         onClick={handleLogout}\r\n//         style={styles.logoutButton}\r\n//         onMouseOver={(e) => (e.target.style.backgroundColor = \"#bd2130\")}\r\n//         onMouseOut={(e) => (e.target.style.backgroundColor = \"#dc3545\")}\r\n//       >\r\n//         Logout\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Tables;\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const FormSection = ({ title, fields, data, setData, endpoint }) => {\r\n//   const [containerHovered, setContainerHovered] = useState(false);\r\n//   const [buttonHovered, setButtonHovered] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(endpoint, {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n      \r\n//       if (response.ok) {\r\n//         alert(`${title} submitted successfully!`);\r\n//         setData({});\r\n//       } else {\r\n//         try {\r\n//           const errorData = await response.json();\r\n//           alert(\r\n//             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\r\n//           );\r\n//         } catch (parseError) {\r\n//           alert(`Failed to submit ${title}: ${response.statusText}`);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(`Error submitting ${title}:`, error);\r\n//       alert(`An error occurred while submitting ${title}.`);\r\n//     }\r\n//   };\r\n\r\n//   const styles = {\r\n//     inputField: {\r\n//       margin: \"10px 0\",\r\n//       padding: \"15px\",\r\n//       borderRadius: \"8px\",\r\n//       border: \"1px solid #e0e0e0\",\r\n//       width: \"100%\",\r\n//       boxSizing: \"border-box\",\r\n//       fontSize: \"16px\",\r\n//       transition: \"all 0.3s ease\",\r\n//       background: \"#f8f9fa\",\r\n//     },\r\n//     button: {\r\n//       backgroundColor: \"#4361ee\",\r\n//       color: \"white\",\r\n//       padding: \"12px 25px\",\r\n//       border: \"none\",\r\n//       borderRadius: \"8px\",\r\n//       cursor: \"pointer\",\r\n//       transition: \"all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\r\n//       fontSize: \"16px\",\r\n//       fontWeight: \"600\",\r\n//       letterSpacing: \"0.5px\",\r\n//       boxShadow: \"0 4px 6px rgba(67, 97, 238, 0.3)\",\r\n//     },\r\n//     container: {\r\n//       borderRadius: \"16px\",\r\n//       boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.08)\",\r\n//       padding: \"30px\",\r\n//       maxWidth: \"650px\",\r\n//       margin: \"25px auto\",\r\n//       backgroundColor: \"white\",\r\n//       transition: \"all 0.4s ease\",\r\n//       transform: containerHovered ? \"translateY(-5px)\" : \"translateY(0)\",\r\n//       border: \"1px solid #f0f0f0\",\r\n//     },\r\n//     label: {\r\n//       display: \"block\",\r\n//       marginBottom: \"8px\",\r\n//       fontWeight: \"500\",\r\n//       color: \"#333\",\r\n//       fontSize: \"15px\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div \r\n//       style={styles.container}\r\n//       onMouseEnter={() => setContainerHovered(true)}\r\n//       onMouseLeave={() => setContainerHovered(false)}\r\n//     >\r\n//       <h2 style={{\r\n//         marginTop: 0,\r\n//         marginBottom: \"25px\",\r\n//         color: \"#4361ee\",\r\n//         fontSize: \"28px\",\r\n//         fontWeight: \"700\",\r\n//         textAlign: \"center\",\r\n//         position: \"relative\",\r\n//         paddingBottom: \"15px\",\r\n//       }}>\r\n//         {title}\r\n//         <div style={{\r\n//           position: \"absolute\",\r\n//           bottom: 0,\r\n//           left: \"50%\",\r\n//           transform: \"translateX(-50%)\",\r\n//           width: \"80px\",\r\n//           height: \"4px\",\r\n//           background: \"linear-gradient(90deg, #4361ee, #3a0ca3)\",\r\n//           borderRadius: \"2px\",\r\n//         }}></div>\r\n//       </h2>\r\n      \r\n//       <form onSubmit={handleSubmit}>\r\n//         {fields.map((field) => (\r\n//           <div key={field.key} style={{ marginBottom: \"20px\" }}>\r\n//             <label style={styles.label}>{field.label}:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={data[field.key] || \"\"}\r\n//               onChange={(e) =>\r\n//                 setData({ ...data, [field.key]: e.target.value })\r\n//               }\r\n//               style={styles.inputField}\r\n//               onFocus={(e) => {\r\n//                 e.target.style.borderColor = \"#4361ee\";\r\n//                 e.target.style.boxShadow = \"0 0 0 3px rgba(67, 97, 238, 0.2)\";\r\n//               }}\r\n//               onBlur={(e) => {\r\n//                 e.target.style.borderColor = \"#e0e0e0\";\r\n//                 e.target.style.boxShadow = \"none\";\r\n//               }}\r\n//               required\r\n//               placeholder={`Enter ${field.label.toLowerCase()}...`}\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//         <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n//           <button\r\n//             type=\"submit\"\r\n//             style={{\r\n//               ...styles.button,\r\n//               backgroundColor: buttonHovered ? \"#3a0ca3\" : \"#4361ee\",\r\n//               transform: buttonHovered ? \"scale(1.05)\" : \"scale(1)\",\r\n//               boxShadow: buttonHovered \r\n//                 ? \"0 7px 14px rgba(67, 97, 238, 0.4)\" \r\n//                 : \"0 4px 6px rgba(67, 97, 238, 0.3)\",\r\n//             }}\r\n//             onMouseEnter={() => setButtonHovered(true)}\r\n//             onMouseLeave={() => setButtonHovered(false)}\r\n//           >\r\n//             Submit {title}\r\n//             <span style={{ marginLeft: \"8px\", transition: \"transform 0.3s ease\" }}>\r\n//               {buttonHovered ? \"🚀\" : \"📝\"}\r\n//             </span>\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Tables = () => {\r\n//   const [recruiter, setRecruiter] = useState({});\r\n//   const [skill, setSkill] = useState({});\r\n//   const [internship, setInternship] = useState({});\r\n//   const [interview, setInterview] = useState({});\r\n//   const [placement, setPlacement] = useState({});\r\n//   const navigate = useNavigate();\r\n  \r\n//   const [logoutHovered, setLogoutHovered] = useState(false);\r\n\r\n//   const handleLogout = () => {\r\n//     navigate(\"/student-details\");\r\n//   };\r\n\r\n//   const styles = {\r\n//     logoutButton: {\r\n//       padding: \"14px 30px\",\r\n//       backgroundColor: \"#f72585\",\r\n//       color: \"white\",\r\n//       border: \"none\",\r\n//       borderRadius: \"10px\",\r\n//       cursor: \"pointer\",\r\n//       margin: \"30px auto 40px\",\r\n//       display: \"block\",\r\n//       fontSize: \"16px\",\r\n//       fontWeight: \"600\",\r\n//       letterSpacing: \"0.5px\",\r\n//       boxShadow: \"0 4px 6px rgba(247, 37, 133, 0.3)\",\r\n//       transition: \"all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\r\n//     },\r\n//     container: {\r\n//       maxWidth: \"800px\",\r\n//       margin: \"0 auto\",\r\n//       padding: \"20px\",\r\n//       background: \"linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)\",\r\n//       minHeight: \"100vh\",\r\n//     },\r\n//     header: {\r\n//       textAlign: \"center\",\r\n//       padding: \"30px 0 10px\",\r\n//       color: \"#3a0ca3\",\r\n//       fontSize: \"2.8rem\",\r\n//       fontWeight: \"800\",\r\n//       textShadow: \"2px 2px 4px rgba(0,0,0,0.1)\",\r\n//       marginBottom: \"10px\",\r\n//       background: \"linear-gradient(90deg, #4361ee, #7209b7)\",\r\n//       WebkitBackgroundClip: \"text\",\r\n//       WebkitTextFillColor: \"transparent\",\r\n//     },\r\n//     subtitle: {\r\n//       textAlign: \"center\",\r\n//       color: \"#6c757d\",\r\n//       fontSize: \"1.2rem\",\r\n//       marginBottom: \"40px\",\r\n//       fontWeight: \"400\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h1 style={styles.header}>Campus Placement Portal</h1>\r\n//       <p style={styles.subtitle}>Manage all placement-related information in one place</p>\r\n      \r\n//       <FormSection\r\n//         title=\"Recruiter Details\"\r\n//         fields={[\r\n//           { key: \"companyName\", label: \"Company Name\" },\r\n//           { key: \"contactPerson\", label: \"Contact Person\" },\r\n//           { key: \"contactEmail\", label: \"Contact Email\" },\r\n//           { key: \"contactPhone\", label: \"Contact Phone\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//         ]}\r\n//         data={recruiter}\r\n//         setData={setRecruiter}\r\n//         endpoint=\"http://localhost:5000/api/recruiters\"\r\n//       />\r\n      \r\n//       <FormSection\r\n//         title=\"Skill Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"skill_name\", label: \"Skill Name\" },\r\n//           { key: \"skill_category\", label: \"Skill Category\" },\r\n//         ]}\r\n//         data={skill}\r\n//         setData={setSkill}\r\n//         endpoint=\"http://localhost:5000/api/skills\"\r\n//       />\r\n      \r\n//       <FormSection\r\n//         title=\"Internship Details\"\r\n//         fields={[\r\n//           { key: \"title\", label: \"Title\" },\r\n//           { key: \"description\", label: \"Description\" },\r\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//           { key: \"duration\", label: \"Duration\" },\r\n//           { key: \"stipend\", label: \"Stipend\" },\r\n//           { key: \"skills_required\", label: \"Skills Required\" },\r\n//           { key: \"application_deadline\", label: \"Application Deadline\" },\r\n//         ]}\r\n//         data={internship}\r\n//         setData={setInternship}\r\n//         endpoint=\"http://localhost:5000/api/internships\"\r\n//       />\r\n      \r\n//       <FormSection\r\n//         title=\"Interview Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n//           { key: \"interview_result\", label: \"Interview Result\" },\r\n//           { key: \"interview_date\", label: \"Interview Date\" },\r\n//           { key: \"interview_mode\", label: \"Interview Mode\" },\r\n//           { key: \"feedback\", label: \"Feedback\" },\r\n//           { key: \"interviewer_name\", label: \"Interview Name\" },\r\n//         ]}\r\n//         data={interview}\r\n//         setData={setInterview}\r\n//         endpoint=\"http://localhost:5000/api/interviews\"\r\n//       />\r\n      \r\n//       <FormSection\r\n//         title=\"Placement Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"company_name\", label: \"Company Name\" },\r\n//           { key: \"job_title\", label: \"Job Title\" },\r\n//           { key: \"date_of_placement\", label: \"Date of Placement\" },\r\n//           { key: \"salary_package\", label: \"Salary\" },\r\n//           { key: \"placed\", label: \"Placed\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//         ]}\r\n//         data={placement}\r\n//         setData={setPlacement}\r\n//         endpoint=\"http://localhost:5000/api/placements\"\r\n//       />\r\n      \r\n//       <button\r\n//         onClick={handleLogout}\r\n//         style={{\r\n//           ...styles.logoutButton,\r\n//           backgroundColor: logoutHovered ? \"#b5179e\" : \"#f72585\",\r\n//           transform: logoutHovered ? \"scale(1.05)\" : \"scale(1)\",\r\n//           boxShadow: logoutHovered \r\n//             ? \"0 7px 14px rgba(247, 37, 133, 0.4)\" \r\n//             : \"0 4px 6px rgba(247, 37, 133, 0.3)\",\r\n//         }}\r\n//         onMouseEnter={() => setLogoutHovered(true)}\r\n//         onMouseLeave={() => setLogoutHovered(false)}\r\n//       >\r\n//         {logoutHovered ? \"👋 Logging Out...\" : \"🚪 Logout\"}\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Tables;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}