{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\DB\\\\DBMS\\\\Frontend\\\\src\\\\pages\\\\student\\\\Tables.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n\n// // // const FormSection = ({ title, fields, data, setData, endpoint }) => {\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     try {\n// // //       const response = await fetch(endpoint, {\n// // //         method: \"POST\",\n// // //         headers: { \"Content-Type\": \"application/json\" },\n// // //         body: JSON.stringify(data),\n// // //       });\n// // //       if (response.ok) {\n// // //         alert(`${title} submitted successfully!`);\n// // //         setData({}); // Clear form data\n// // //       } else {\n// // //         const errorData = await response.json();\n// // //         alert(\n// // //           `Failed to submit ${title}: ${errorData.message || \"Unknown error\"}`\n// // //         );\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(`Error submitting ${title}:`, error);\n// // //       alert(`An error occurred while submitting ${title}.`);\n// // //     }\n// // //   };\n// // const FormSection = ({ title, fields, data, setData, endpoint }) => {\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await fetch(endpoint, {\n// //         method: \"POST\",\n// //         headers: { \"Content-Type\": \"application/json\" },\n// //         body: JSON.stringify(data),\n// //       });\n\n// //       if (response.ok) {\n// //         alert(`${title} submitted successfully!`);\n// //         setData({});\n// //       } else {\n// //         try {\n// //           const errorData = await response.json();\n// //           alert(\n// //             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\n// //           );\n// //         } catch (parseError) {\n// //           alert(`Failed to submit ${title}: ${response.statusText}`);\n// //         }\n// //       }\n// //     } catch (error) {\n// //       console.error(`Error submitting ${title}:`, error);\n// //       alert(`An error occurred while submitting ${title}.`);\n// //     }\n// //   };\n\n// //   // ... rest of the component remains the same\n// // };\n// //   const styles = {\n// //     inputField: {\n// //       margin: \"10px 0\",\n// //       padding: \"10px\",\n// //       borderRadius: \"4px\",\n// //       border: \"1px solid #ddd\",\n// //       width: \"100%\",\n// //       boxSizing: \"border-box\",\n// //     },\n// //     button: {\n// //       backgroundColor: \"#007bff\",\n// //       color: \"white\",\n// //       padding: \"10px 15px\",\n// //       border: \"none\",\n// //       borderRadius: \"4px\",\n// //       cursor: \"pointer\",\n// //       transition: \"background-color 0.3s ease\",\n// //     },\n// //     container: {\n// //       borderRadius: \"8px\",\n// //       boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n// //       padding: \"20px\",\n// //       maxWidth: \"600px\",\n// //       margin: \"20px auto\",\n// //       backgroundColor: \"#f9f9f9\",\n// //     },\n// //     errorMessage: {\n// //       color: \"red\",\n// //       fontSize: \"12px\",\n// //     },\n// //   };\n\n// //   return (\n// //     <div style={styles.container}>\n// //       <h2>{title}</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         {fields.map((field) => (\n// //           <div key={field.key} style={{ marginBottom: \"10px\" }}>\n// //             <label>{field.label}:</label>\n// //             <input\n// //               type=\"text\"\n// //               value={data[field.key] || \"\"}\n// //               onChange={(e) =>\n// //                 setData({ ...data, [field.key]: e.target.value })\n// //               }\n// //               style={styles.inputField}\n// //               required\n// //             />\n// //           </div>\n// //         ))}\n// //         <button\n// //           type=\"submit\"\n// //           style={styles.button}\n// //           onMouseOver={(e) => (e.target.style.backgroundColor = \"#0056b3\")}\n// //           onMouseOut={(e) => (e.target.style.backgroundColor = \"#007bff\")}\n// //         >\n// //           Submit {title}\n// //         </button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // const Tables = () => {\n// //   const [recruiter, setRecruiter] = useState({});\n// //   const [skill, setSkill] = useState({});\n// //   const [internship, setInternship] = useState({});\n// //   const [interview, setInterview] = useState({});\n// //   const [placement, setPlacement] = useState({});\n// //   const navigate = useNavigate();\n\n// //   const handleLogout = () => {\n// //     navigate(\"/student-details\");\n// //   };\n\n// //   const styles = {\n// //     logoutButton: {\n// //       padding: \"10px 15px\",\n// //       backgroundColor: \"#dc3545\",\n// //       color: \"white\",\n// //       border: \"none\",\n// //       borderRadius: \"4px\",\n// //       cursor: \"pointer\",\n// //       marginTop: \"20px\",\n// //       transition: \"background-color 0.3s ease\",\n// //     },\n// //   };\n\n// //   return (\n// //     <div>\n// //       <FormSection\n// //         // Replace ONLY the Recruiter Details FormSection component with this:\n// //   title=\"Recruiter Details\"\n// //   fields={[\n// //     { key: \"companyName\", label: \"Company Name\" },\n// //     { key: \"contactPerson\", label: \"Contact Person\" },\n// //     { key: \"contactEmail\", label: \"Contact Email\" },\n// //     { key: \"contactPhone\", label: \"Contact Phone\" },\n// //     { key: \"location\", label: \"Location\" },\n// //   ]}\n// //   data={recruiter}\n// //   setData={setRecruiter}\n// //   endpoint=\"http://localhost:5000/api/recruiters\"\n// // />\n\n// // // In FormSection component, replace the alert message with:\n// // alert(\n// //   `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\n// // );\n// //       <FormSection\n// //         title=\"Skill Details\"\n// //         fields={[\n\n// //           { key: \"std_id\", label: \"Student ID\" },\n// //           { key: \"skill_name\", label: \"Skill Name\" },\n// //           { key: \"skill_category\", label: \"Skill Category\" },\n\n// //         ]}\n// //         data={skill}\n// //         setData={setSkill}\n// //         endpoint=\"http://localhost:5000/api/skills\"\n// //       />\n// //       <FormSection\n// //         title=\"Internship Details\"\n// //         fields={[\n\n// //           { key: \"title\", label: \"Title\" },\n// //           { key: \"description\", label: \"Description\" },\n// //           { key: \"recruit_id\", label: \"Recruiter ID\" },\n// //           { key: \"location\", label: \"Location\" },\n// //           { key: \"duration\", label: \"Duration\" },\n// //           { key: \"stipend\", label: \"Stipend\" },\n// //           { key: \"skills_required\", label: \"Skills Required\" },\n// //           { key: \"application_deadline\", label: \"Application Deadline\" },\n// //         ]}\n// //         data={internship}\n// //         setData={setInternship}\n// //         endpoint=\"http://localhost:5000/api/internships\"\n// //       />\n// //       <FormSection\n// //         title=\"Interview Details\"\n// //         fields={[\n\n// //           { key: \"std_id\", label: \"Student ID\" },\n// //           { key: \"recruit_id\", label: \"Recruiter ID\" },\n// //           { key: \"interview_result\", label: \"Interview Result\" },\n// //           { key: \"interview_date\", label: \"Interview Date\" },\n// //           { key: \"interview_mode\", label: \"Interview Mode\" },\n// //           { key: \"feedback\", label: \"Feedback\" },\n// //           { key: \"interviewer_name\", label: \"Interview Name\" },\n// //         ]}\n// //         data={interview}\n// //         setData={setInterview}\n// //         endpoint=\"http://localhost:5000/api/interviews\"\n// //       />\n// //       <FormSection\n// //         title=\"Placement Details\"\n// //         fields={[\n\n// //           { key: \"std_id\", label: \"Student ID\" },\n// //           { key: \"company_name\", label: \"Company Name\" },\n// //           { key: \"job_title\", label: \"Job Title\" },\n// //           { key: \"date_of_placement\", label: \"Date of Placement\" },\n// //           { key: \"salary_package\", label: \"Salary\" },\n// //           { key: \"placed\", label: \"Placed\" },\n// //           { key: \"location\", label: \"Location\" },\n// //         ]}\n// //         data={placement}\n// //         setData={setPlacement}\n// //         endpoint=\"http://localhost:5000/api/placements\"\n// //       />\n// //       <button\n// //         onClick={handleLogout}\n// //         style={styles.logoutButton}\n// //         onMouseOver={(e) => (e.target.style.backgroundColor = \"#bd2130\")}\n// //         onMouseOut={(e) => (e.target.style.backgroundColor = \"#dc3545\")}\n// //       >\n// //         Logout\n// //       </button>\n// //     </div>\n// //   );\n// // };\n\n// // export default Tables;\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const FormSection = ({ title, fields, data, setData, endpoint }) => {\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(endpoint, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(data),\n//       });\n\n//       if (response.ok) {\n//         alert(`${title} submitted successfully!`);\n//         setData({});\n//       } else {\n//         try {\n//           const errorData = await response.json();\n//           alert(\n//             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\n//           );\n//         } catch (parseError) {\n//           alert(`Failed to submit ${title}: ${response.statusText}`);\n//         }\n//       }\n//     } catch (error) {\n//       console.error(`Error submitting ${title}:`, error);\n//       alert(`An error occurred while submitting ${title}.`);\n//     }\n//   };\n\n//   const styles = {\n//     inputField: {\n//       margin: \"10px 0\",\n//       padding: \"10px\",\n//       borderRadius: \"4px\",\n//       border: \"1px solid #ddd\",\n//       width: \"100%\",\n//       boxSizing: \"border-box\",\n//     },\n//     button: {\n//       backgroundColor: \"#007bff\",\n//       color: \"white\",\n//       padding: \"10px 15px\",\n//       border: \"none\",\n//       borderRadius: \"4px\",\n//       cursor: \"pointer\",\n//       transition: \"background-color 0.3s ease\",\n//     },\n//     container: {\n//       borderRadius: \"8px\",\n//       boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n//       padding: \"20px\",\n//       maxWidth: \"600px\",\n//       margin: \"20px auto\",\n//       backgroundColor: \"#f9f9f9\",\n//     },\n//     errorMessage: {\n//       color: \"red\",\n//       fontSize: \"12px\",\n//     },\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>{title}</h2>\n//       <form onSubmit={handleSubmit}>\n//         {fields.map((field) => (\n//           <div key={field.key} style={{ marginBottom: \"10px\" }}>\n//             <label>{field.label}:</label>\n//             <input\n//               type=\"text\"\n//               value={data[field.key] || \"\"}\n//               onChange={(e) =>\n//                 setData({ ...data, [field.key]: e.target.value })\n//               }\n//               style={styles.inputField}\n//               required\n//             />\n//           </div>\n//         ))}\n//         <button\n//           type=\"submit\"\n//           style={styles.button}\n//           onMouseOver={(e) => (e.target.style.backgroundColor = \"#0056b3\")}\n//           onMouseOut={(e) => (e.target.style.backgroundColor = \"#007bff\")}\n//         >\n//           Submit {title}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const Tables = () => {\n//   const [recruiter, setRecruiter] = useState({});\n//   const [skill, setSkill] = useState({});\n//   const [internship, setInternship] = useState({});\n//   const [interview, setInterview] = useState({});\n//   const [placement, setPlacement] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     navigate(\"/student-details\");\n//   };\n\n//   const styles = {\n//     logoutButton: {\n//       padding: \"10px 15px\",\n//       backgroundColor: \"#dc3545\",\n//       color: \"white\",\n//       border: \"none\",\n//       borderRadius: \"4px\",\n//       cursor: \"pointer\",\n//       marginTop: \"20px\",\n//       transition: \"background-color 0.3s ease\",\n//     },\n//   };\n\n//   return (\n//     <div>\n//       <FormSection\n//         title=\"Recruiter Details\"\n//         fields={[\n//           { key: \"companyName\", label: \"Company Name\" },\n//           { key: \"contactPerson\", label: \"Contact Person\" },\n//           { key: \"contactEmail\", label: \"Contact Email\" },\n//           { key: \"contactPhone\", label: \"Contact Phone\" },\n//           { key: \"location\", label: \"Location\" },\n//         ]}\n//         data={recruiter}\n//         setData={setRecruiter}\n//         endpoint=\"http://localhost:5000/api/recruiters\"\n//       />\n//       <FormSection\n//         title=\"Skill Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"skill_name\", label: \"Skill Name\" },\n//           { key: \"skill_category\", label: \"Skill Category\" },\n//         ]}\n//         data={skill}\n//         setData={setSkill}\n//         endpoint=\"http://localhost:5000/api/skills\"\n//       />\n//       <FormSection\n//         title=\"Internship Details\"\n//         fields={[\n//           { key: \"title\", label: \"Title\" },\n//           { key: \"description\", label: \"Description\" },\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\n//           { key: \"location\", label: \"Location\" },\n//           { key: \"duration\", label: \"Duration\" },\n//           { key: \"stipend\", label: \"Stipend\" },\n//           { key: \"skills_required\", label: \"Skills Required\" },\n//           { key: \"application_deadline\", label: \"Application Deadline\" },\n//         ]}\n//         data={internship}\n//         setData={setInternship}\n//         endpoint=\"http://localhost:5000/api/internships\"\n//       />\n//       <FormSection\n//         title=\"Interview Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\n//           { key: \"interview_result\", label: \"Interview Result\" },\n//           { key: \"interview_date\", label: \"Interview Date\" },\n//           { key: \"interview_mode\", label: \"Interview Mode\" },\n//           { key: \"feedback\", label: \"Feedback\" },\n//           { key: \"interviewer_name\", label: \"Interview Name\" },\n//         ]}\n//         data={interview}\n//         setData={setInterview}\n//         endpoint=\"http://localhost:5000/api/interviews\"\n//       />\n//       <FormSection\n//         title=\"Placement Details\"\n//         fields={[\n//           { key: \"std_id\", label: \"Student ID\" },\n//           { key: \"company_name\", label: \"Company Name\" },\n//           { key: \"job_title\", label: \"Job Title\" },\n//           { key: \"date_of_placement\", label: \"Date of Placement\" },\n//           { key: \"salary_package\", label: \"Salary\" },\n//           { key: \"placed\", label: \"Placed\" },\n//           { key: \"location\", label: \"Location\" },\n//         ]}\n//         data={placement}\n//         setData={setPlacement}\n//         endpoint=\"http://localhost:5000/api/placements\"\n//       />\n//       <button\n//         onClick={handleLogout}\n//         style={styles.logoutButton}\n//         onMouseOver={(e) => (e.target.style.backgroundColor = \"#bd2130\")}\n//         onMouseOut={(e) => (e.target.style.backgroundColor = \"#dc3545\")}\n//       >\n//         Logout\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Tables;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormSection = ({\n  title,\n  fields,\n  endpoint,\n  isActive,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        alert(`${title} submitted successfully!`);\n        setFormData({});\n        onClose();\n      } else {\n        try {\n          const errorData = await response.json();\n          alert(`Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`);\n        } catch (parseError) {\n          alert(`Failed to submit ${title}: ${response.statusText}`);\n        }\n      }\n    } catch (error) {\n      console.error(`Error submitting ${title}:`, error);\n      alert(`An error occurred while submitting ${title}.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: isActive ? 'translate(-50%, -50%) scale(1)' : 'translate(-50%, -50%) scale(0.8)',\n      opacity: isActive ? 1 : 0,\n      width: '90%',\n      maxWidth: '500px',\n      backgroundColor: 'rgba(25, 25, 45, 0.95)',\n      borderRadius: '20px',\n      padding: '25px',\n      boxShadow: '0 0 30px rgba(0, 200, 255, 0.5)',\n      zIndex: 100,\n      transition: 'all 0.4s ease-in-out',\n      pointerEvents: isActive ? 'all' : 'none',\n      backdropFilter: 'blur(10px)',\n      border: '1px solid rgba(0, 200, 255, 0.3)',\n      maxHeight: '90vh',\n      overflowY: 'auto'\n    },\n    onClick: e => e.stopPropagation() // Prevent clicks inside form from closing it\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n};\n_s(FormSection, \"CgHqyReD6jKK1NawX+yWoebGi8o=\");\n_c = FormSection;\nconst Tables = () => {\n  // ... existing state and handlers ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {/* ... your existing styles ... */},\n    children: [formConfigs.map(form => /*#__PURE__*/_jsxDEV(FormSection, {\n      title: form.title,\n      fields: form.fields,\n      endpoint: form.endpoint,\n      isActive: activeForm === form.key,\n      onClose: () => setActiveForm(null)\n    }, form.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }, this)), activeForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        zIndex: 50,\n        transition: \"opacity 0.3s ease\",\n        backdropFilter: \"blur(5px)\"\n      },\n      onClick: () => setActiveForm(null) // Only closes when clicking outside form\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 515,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Tables;\nexport default Tables;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormSection\");\n$RefreshReg$(_c2, \"Tables\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","FormSection","title","fields","endpoint","isActive","onClose","_s","formData","setFormData","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","error","message","parseError","statusText","console","style","position","top","left","transform","opacity","width","maxWidth","backgroundColor","borderRadius","padding","boxShadow","zIndex","transition","pointerEvents","backdropFilter","border","maxHeight","overflowY","onClick","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tables","children","formConfigs","map","form","activeForm","key","setActiveForm","right","bottom","_c2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/DB/DBMS/Frontend/src/pages/student/Tables.js"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n\r\n// // // const FormSection = ({ title, fields, data, setData, endpoint }) => {\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     try {\r\n// // //       const response = await fetch(endpoint, {\r\n// // //         method: \"POST\",\r\n// // //         headers: { \"Content-Type\": \"application/json\" },\r\n// // //         body: JSON.stringify(data),\r\n// // //       });\r\n// // //       if (response.ok) {\r\n// // //         alert(`${title} submitted successfully!`);\r\n// // //         setData({}); // Clear form data\r\n// // //       } else {\r\n// // //         const errorData = await response.json();\r\n// // //         alert(\r\n// // //           `Failed to submit ${title}: ${errorData.message || \"Unknown error\"}`\r\n// // //         );\r\n// // //       }\r\n// // //     } catch (error) {\r\n// // //       console.error(`Error submitting ${title}:`, error);\r\n// // //       alert(`An error occurred while submitting ${title}.`);\r\n// // //     }\r\n// // //   };\r\n// // const FormSection = ({ title, fields, data, setData, endpoint }) => {\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const response = await fetch(endpoint, {\r\n// //         method: \"POST\",\r\n// //         headers: { \"Content-Type\": \"application/json\" },\r\n// //         body: JSON.stringify(data),\r\n// //       });\r\n      \r\n// //       if (response.ok) {\r\n// //         alert(`${title} submitted successfully!`);\r\n// //         setData({});\r\n// //       } else {\r\n// //         try {\r\n// //           const errorData = await response.json();\r\n// //           alert(\r\n// //             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\r\n// //           );\r\n// //         } catch (parseError) {\r\n// //           alert(`Failed to submit ${title}: ${response.statusText}`);\r\n// //         }\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(`Error submitting ${title}:`, error);\r\n// //       alert(`An error occurred while submitting ${title}.`);\r\n// //     }\r\n// //   };\r\n\r\n// //   // ... rest of the component remains the same\r\n// // };\r\n// //   const styles = {\r\n// //     inputField: {\r\n// //       margin: \"10px 0\",\r\n// //       padding: \"10px\",\r\n// //       borderRadius: \"4px\",\r\n// //       border: \"1px solid #ddd\",\r\n// //       width: \"100%\",\r\n// //       boxSizing: \"border-box\",\r\n// //     },\r\n// //     button: {\r\n// //       backgroundColor: \"#007bff\",\r\n// //       color: \"white\",\r\n// //       padding: \"10px 15px\",\r\n// //       border: \"none\",\r\n// //       borderRadius: \"4px\",\r\n// //       cursor: \"pointer\",\r\n// //       transition: \"background-color 0.3s ease\",\r\n// //     },\r\n// //     container: {\r\n// //       borderRadius: \"8px\",\r\n// //       boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n// //       padding: \"20px\",\r\n// //       maxWidth: \"600px\",\r\n// //       margin: \"20px auto\",\r\n// //       backgroundColor: \"#f9f9f9\",\r\n// //     },\r\n// //     errorMessage: {\r\n// //       color: \"red\",\r\n// //       fontSize: \"12px\",\r\n// //     },\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div style={styles.container}>\r\n// //       <h2>{title}</h2>\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         {fields.map((field) => (\r\n// //           <div key={field.key} style={{ marginBottom: \"10px\" }}>\r\n// //             <label>{field.label}:</label>\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               value={data[field.key] || \"\"}\r\n// //               onChange={(e) =>\r\n// //                 setData({ ...data, [field.key]: e.target.value })\r\n// //               }\r\n// //               style={styles.inputField}\r\n// //               required\r\n// //             />\r\n// //           </div>\r\n// //         ))}\r\n// //         <button\r\n// //           type=\"submit\"\r\n// //           style={styles.button}\r\n// //           onMouseOver={(e) => (e.target.style.backgroundColor = \"#0056b3\")}\r\n// //           onMouseOut={(e) => (e.target.style.backgroundColor = \"#007bff\")}\r\n// //         >\r\n// //           Submit {title}\r\n// //         </button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // const Tables = () => {\r\n// //   const [recruiter, setRecruiter] = useState({});\r\n// //   const [skill, setSkill] = useState({});\r\n// //   const [internship, setInternship] = useState({});\r\n// //   const [interview, setInterview] = useState({});\r\n// //   const [placement, setPlacement] = useState({});\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleLogout = () => {\r\n// //     navigate(\"/student-details\");\r\n// //   };\r\n\r\n// //   const styles = {\r\n// //     logoutButton: {\r\n// //       padding: \"10px 15px\",\r\n// //       backgroundColor: \"#dc3545\",\r\n// //       color: \"white\",\r\n// //       border: \"none\",\r\n// //       borderRadius: \"4px\",\r\n// //       cursor: \"pointer\",\r\n// //       marginTop: \"20px\",\r\n// //       transition: \"background-color 0.3s ease\",\r\n// //     },\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <FormSection\r\n// //         // Replace ONLY the Recruiter Details FormSection component with this:\r\n// //   title=\"Recruiter Details\"\r\n// //   fields={[\r\n// //     { key: \"companyName\", label: \"Company Name\" },\r\n// //     { key: \"contactPerson\", label: \"Contact Person\" },\r\n// //     { key: \"contactEmail\", label: \"Contact Email\" },\r\n// //     { key: \"contactPhone\", label: \"Contact Phone\" },\r\n// //     { key: \"location\", label: \"Location\" },\r\n// //   ]}\r\n// //   data={recruiter}\r\n// //   setData={setRecruiter}\r\n// //   endpoint=\"http://localhost:5000/api/recruiters\"\r\n// // />\r\n\r\n// // // In FormSection component, replace the alert message with:\r\n// // alert(\r\n// //   `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\r\n// // );\r\n// //       <FormSection\r\n// //         title=\"Skill Details\"\r\n// //         fields={[\r\n          \r\n// //           { key: \"std_id\", label: \"Student ID\" },\r\n// //           { key: \"skill_name\", label: \"Skill Name\" },\r\n// //           { key: \"skill_category\", label: \"Skill Category\" },\r\n          \r\n// //         ]}\r\n// //         data={skill}\r\n// //         setData={setSkill}\r\n// //         endpoint=\"http://localhost:5000/api/skills\"\r\n// //       />\r\n// //       <FormSection\r\n// //         title=\"Internship Details\"\r\n// //         fields={[\r\n          \r\n// //           { key: \"title\", label: \"Title\" },\r\n// //           { key: \"description\", label: \"Description\" },\r\n// //           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n// //           { key: \"location\", label: \"Location\" },\r\n// //           { key: \"duration\", label: \"Duration\" },\r\n// //           { key: \"stipend\", label: \"Stipend\" },\r\n// //           { key: \"skills_required\", label: \"Skills Required\" },\r\n// //           { key: \"application_deadline\", label: \"Application Deadline\" },\r\n// //         ]}\r\n// //         data={internship}\r\n// //         setData={setInternship}\r\n// //         endpoint=\"http://localhost:5000/api/internships\"\r\n// //       />\r\n// //       <FormSection\r\n// //         title=\"Interview Details\"\r\n// //         fields={[\r\n        \r\n// //           { key: \"std_id\", label: \"Student ID\" },\r\n// //           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n// //           { key: \"interview_result\", label: \"Interview Result\" },\r\n// //           { key: \"interview_date\", label: \"Interview Date\" },\r\n// //           { key: \"interview_mode\", label: \"Interview Mode\" },\r\n// //           { key: \"feedback\", label: \"Feedback\" },\r\n// //           { key: \"interviewer_name\", label: \"Interview Name\" },\r\n// //         ]}\r\n// //         data={interview}\r\n// //         setData={setInterview}\r\n// //         endpoint=\"http://localhost:5000/api/interviews\"\r\n// //       />\r\n// //       <FormSection\r\n// //         title=\"Placement Details\"\r\n// //         fields={[\r\n          \r\n// //           { key: \"std_id\", label: \"Student ID\" },\r\n// //           { key: \"company_name\", label: \"Company Name\" },\r\n// //           { key: \"job_title\", label: \"Job Title\" },\r\n// //           { key: \"date_of_placement\", label: \"Date of Placement\" },\r\n// //           { key: \"salary_package\", label: \"Salary\" },\r\n// //           { key: \"placed\", label: \"Placed\" },\r\n// //           { key: \"location\", label: \"Location\" },\r\n// //         ]}\r\n// //         data={placement}\r\n// //         setData={setPlacement}\r\n// //         endpoint=\"http://localhost:5000/api/placements\"\r\n// //       />\r\n// //       <button\r\n// //         onClick={handleLogout}\r\n// //         style={styles.logoutButton}\r\n// //         onMouseOver={(e) => (e.target.style.backgroundColor = \"#bd2130\")}\r\n// //         onMouseOut={(e) => (e.target.style.backgroundColor = \"#dc3545\")}\r\n// //       >\r\n// //         Logout\r\n// //       </button>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Tables;\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const FormSection = ({ title, fields, data, setData, endpoint }) => {\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(endpoint, {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n      \r\n//       if (response.ok) {\r\n//         alert(`${title} submitted successfully!`);\r\n//         setData({});\r\n//       } else {\r\n//         try {\r\n//           const errorData = await response.json();\r\n//           alert(\r\n//             `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\r\n//           );\r\n//         } catch (parseError) {\r\n//           alert(`Failed to submit ${title}: ${response.statusText}`);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(`Error submitting ${title}:`, error);\r\n//       alert(`An error occurred while submitting ${title}.`);\r\n//     }\r\n//   };\r\n\r\n//   const styles = {\r\n//     inputField: {\r\n//       margin: \"10px 0\",\r\n//       padding: \"10px\",\r\n//       borderRadius: \"4px\",\r\n//       border: \"1px solid #ddd\",\r\n//       width: \"100%\",\r\n//       boxSizing: \"border-box\",\r\n//     },\r\n//     button: {\r\n//       backgroundColor: \"#007bff\",\r\n//       color: \"white\",\r\n//       padding: \"10px 15px\",\r\n//       border: \"none\",\r\n//       borderRadius: \"4px\",\r\n//       cursor: \"pointer\",\r\n//       transition: \"background-color 0.3s ease\",\r\n//     },\r\n//     container: {\r\n//       borderRadius: \"8px\",\r\n//       boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n//       padding: \"20px\",\r\n//       maxWidth: \"600px\",\r\n//       margin: \"20px auto\",\r\n//       backgroundColor: \"#f9f9f9\",\r\n//     },\r\n//     errorMessage: {\r\n//       color: \"red\",\r\n//       fontSize: \"12px\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>{title}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {fields.map((field) => (\r\n//           <div key={field.key} style={{ marginBottom: \"10px\" }}>\r\n//             <label>{field.label}:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={data[field.key] || \"\"}\r\n//               onChange={(e) =>\r\n//                 setData({ ...data, [field.key]: e.target.value })\r\n//               }\r\n//               style={styles.inputField}\r\n//               required\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={styles.button}\r\n//           onMouseOver={(e) => (e.target.style.backgroundColor = \"#0056b3\")}\r\n//           onMouseOut={(e) => (e.target.style.backgroundColor = \"#007bff\")}\r\n//         >\r\n//           Submit {title}\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Tables = () => {\r\n//   const [recruiter, setRecruiter] = useState({});\r\n//   const [skill, setSkill] = useState({});\r\n//   const [internship, setInternship] = useState({});\r\n//   const [interview, setInterview] = useState({});\r\n//   const [placement, setPlacement] = useState({});\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogout = () => {\r\n//     navigate(\"/student-details\");\r\n//   };\r\n\r\n//   const styles = {\r\n//     logoutButton: {\r\n//       padding: \"10px 15px\",\r\n//       backgroundColor: \"#dc3545\",\r\n//       color: \"white\",\r\n//       border: \"none\",\r\n//       borderRadius: \"4px\",\r\n//       cursor: \"pointer\",\r\n//       marginTop: \"20px\",\r\n//       transition: \"background-color 0.3s ease\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <FormSection\r\n//         title=\"Recruiter Details\"\r\n//         fields={[\r\n//           { key: \"companyName\", label: \"Company Name\" },\r\n//           { key: \"contactPerson\", label: \"Contact Person\" },\r\n//           { key: \"contactEmail\", label: \"Contact Email\" },\r\n//           { key: \"contactPhone\", label: \"Contact Phone\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//         ]}\r\n//         data={recruiter}\r\n//         setData={setRecruiter}\r\n//         endpoint=\"http://localhost:5000/api/recruiters\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Skill Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"skill_name\", label: \"Skill Name\" },\r\n//           { key: \"skill_category\", label: \"Skill Category\" },\r\n//         ]}\r\n//         data={skill}\r\n//         setData={setSkill}\r\n//         endpoint=\"http://localhost:5000/api/skills\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Internship Details\"\r\n//         fields={[\r\n//           { key: \"title\", label: \"Title\" },\r\n//           { key: \"description\", label: \"Description\" },\r\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//           { key: \"duration\", label: \"Duration\" },\r\n//           { key: \"stipend\", label: \"Stipend\" },\r\n//           { key: \"skills_required\", label: \"Skills Required\" },\r\n//           { key: \"application_deadline\", label: \"Application Deadline\" },\r\n//         ]}\r\n//         data={internship}\r\n//         setData={setInternship}\r\n//         endpoint=\"http://localhost:5000/api/internships\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Interview Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"recruit_id\", label: \"Recruiter ID\" },\r\n//           { key: \"interview_result\", label: \"Interview Result\" },\r\n//           { key: \"interview_date\", label: \"Interview Date\" },\r\n//           { key: \"interview_mode\", label: \"Interview Mode\" },\r\n//           { key: \"feedback\", label: \"Feedback\" },\r\n//           { key: \"interviewer_name\", label: \"Interview Name\" },\r\n//         ]}\r\n//         data={interview}\r\n//         setData={setInterview}\r\n//         endpoint=\"http://localhost:5000/api/interviews\"\r\n//       />\r\n//       <FormSection\r\n//         title=\"Placement Details\"\r\n//         fields={[\r\n//           { key: \"std_id\", label: \"Student ID\" },\r\n//           { key: \"company_name\", label: \"Company Name\" },\r\n//           { key: \"job_title\", label: \"Job Title\" },\r\n//           { key: \"date_of_placement\", label: \"Date of Placement\" },\r\n//           { key: \"salary_package\", label: \"Salary\" },\r\n//           { key: \"placed\", label: \"Placed\" },\r\n//           { key: \"location\", label: \"Location\" },\r\n//         ]}\r\n//         data={placement}\r\n//         setData={setPlacement}\r\n//         endpoint=\"http://localhost:5000/api/placements\"\r\n//       />\r\n//       <button\r\n//         onClick={handleLogout}\r\n//         style={styles.logoutButton}\r\n//         onMouseOver={(e) => (e.target.style.backgroundColor = \"#bd2130\")}\r\n//         onMouseOut={(e) => (e.target.style.backgroundColor = \"#dc3545\")}\r\n//       >\r\n//         Logout\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Tables;\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FormSection = ({ title, fields, endpoint, isActive, onClose }) => {\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        alert(`${title} submitted successfully!`);\r\n        setFormData({});\r\n        onClose();\r\n      } else {\r\n        try {\r\n          const errorData = await response.json();\r\n          alert(\r\n            `Failed to submit ${title}: ${errorData.error || errorData.message || \"Unknown error\"}`\r\n          );\r\n        } catch (parseError) {\r\n          alert(`Failed to submit ${title}: ${response.statusText}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error submitting ${title}:`, error);\r\n      alert(`An error occurred while submitting ${title}.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: isActive ? 'translate(-50%, -50%) scale(1)' : 'translate(-50%, -50%) scale(0.8)',\r\n        opacity: isActive ? 1 : 0,\r\n        width: '90%',\r\n        maxWidth: '500px',\r\n        backgroundColor: 'rgba(25, 25, 45, 0.95)',\r\n        borderRadius: '20px',\r\n        padding: '25px',\r\n        boxShadow: '0 0 30px rgba(0, 200, 255, 0.5)',\r\n        zIndex: 100,\r\n        transition: 'all 0.4s ease-in-out',\r\n        pointerEvents: isActive ? 'all' : 'none',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(0, 200, 255, 0.3)',\r\n        maxHeight: '90vh',\r\n        overflowY: 'auto'\r\n      }}\r\n      onClick={(e) => e.stopPropagation()} // Prevent clicks inside form from closing it\r\n    >\r\n      {/* ... rest of your FormSection code remains the same ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tables = () => {\r\n  // ... existing state and handlers ...\r\n\r\n  return (\r\n    <div style={{ /* ... your existing styles ... */ }}>\r\n      {/* ... existing background elements ... */}\r\n      \r\n      {/* ... existing main content ... */}\r\n      \r\n      {/* Render form modals outside main content */}\r\n      {formConfigs.map(form => (\r\n        <FormSection\r\n          key={form.key}\r\n          title={form.title}\r\n          fields={form.fields}\r\n          endpoint={form.endpoint}\r\n          isActive={activeForm === form.key}\r\n          onClose={() => setActiveForm(null)}\r\n        />\r\n      ))}\r\n      \r\n      {/* Background overlay - modified to prevent form closure */}\r\n      {activeForm && (\r\n        <div \r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n            zIndex: 50,\r\n            transition: \"opacity 0.3s ease\",\r\n            backdropFilter: \"blur(5px)\"\r\n          }} \r\n          onClick={() => setActiveForm(null)} // Only closes when clicking outside form\r\n        />\r\n      )}\r\n      \r\n      {/* ... existing style tag ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tables;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}