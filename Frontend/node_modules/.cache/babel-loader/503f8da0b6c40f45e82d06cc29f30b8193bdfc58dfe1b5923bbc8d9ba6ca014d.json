{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\DB\\\\DBMS\\\\Frontend\\\\src\\\\pages\\\\student\\\\StudentDetails.js\",\n  _s = $RefreshSig$();\n// // // import React, { useState } from \"react\"; \n// // // import { useNavigate } from \"react-router-dom\"; \n\n// // // const StudentDetails = () => {\n// // //   const [formData, setFormData] = useState({\n// // //     studentname: \"\",\n// // //     usn: \"\",\n// // //     email: \"\",\n// // //     sem:\"\",\n// // //     yearofgraduation: \"\",\n// // //     specialization: \"\",\n// // //   });\n\n// // //   const [submitted, setSubmitted] = useState(false);\n// // //   const [errorMessage, setErrorMessage] = useState(null); \n// // //   const navigate = useNavigate(); \n\n// // //   const handleChange = (e) => {\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setSubmitted(false);\n// // //     setErrorMessage(null);\n\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/students\", {\n// // //         method: \"POST\",\n// // //         headers: {\n// // //           \"Content-Type\": \"application/json\",\n// // //         },\n// // //         body: JSON.stringify(formData),\n// // //       });\n\n// // //       if (response.ok) {\n// // //         setSubmitted(true);\n// // //         setTimeout(() => {\n// // //           navigate(\"/student/details-page\"); // Redirect to the list page after submission\n// // //         }, 3000);\n// // //       } else {\n// // //         const errorData = await response.json();\n// // //         setErrorMessage(errorData.message || \"Submission failed. Try again.\");\n// // //       }\n// // //     } catch (error) {\n// // //       setErrorMessage(\"A network error occurred. Please check your connection.\");\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div style={{\n// // //       maxWidth: '600px', \n// // //       margin: '50px auto', \n// // //       padding: '30px', \n// // //       backgroundColor: '#ffffff', \n// // //       borderRadius: '10px',\n// // //       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n// // //     }}>\n// // //       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\n// // //       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\n// // //       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\n// // //       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n// // //         <input \n// // //           name=\"studentname\" \n// // //           type=\"text\" \n// // //           placeholder=\"Student Name\" \n// // //           value={formData.studentname} \n// // //           onChange={handleChange} \n// // //           required \n// // //           style={inputStyle} \n// // //         />\n// // //         <input \n// // //           name=\"usn\" \n// // //           type=\"text\" \n// // //           placeholder=\"USN\" \n// // //           value={formData.usn} \n// // //           onChange={handleChange} \n// // //           required \n// // //           style={inputStyle} \n// // //         />\n// // //         <input \n// // //           name=\"email\" \n// // //           type=\"email\" \n// // //           placeholder=\"Email\" \n// // //           value={formData.email} \n// // //           onChange={handleChange} \n// // //           required \n// // //           style={inputStyle} \n// // //         />\n// // //         <input \n// // //           name=\"sem\" \n// // //           type=\"number\" \n// // //           placeholder=\"Semester\" \n// // //           value={formData.sem} \n// // //           onChange={handleChange} \n// // //           required \n// // //           style={inputStyle} \n// // //         />\n// // //         <input \n// // //           name=\"yearofgraduation\" \n// // //           type=\"number\" \n// // //           placeholder=\"Year of Graduation\" \n// // //           value={formData.yearofgraduation} \n// // //           onChange={handleChange} \n// // //           required \n// // //           style={inputStyle} \n// // //         />\n// // //         <input \n// // //           name=\"specialization\" \n// // //           type=\"text\" \n// // //           placeholder=\"Specialization\" \n// // //           value={formData.specialization} \n// // //           onChange={handleChange} \n// // //           required \n// // //           style={inputStyle} \n// // //         />\n// // //         <button type=\"submit\" style={buttonStyle}>Submit</button>\n// // //       </form>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // Inline styles for inputs and button\n// // // const inputStyle = {\n// // //   padding: '12px',\n// // //   fontSize: '16px',\n// // //   border: '1px solid #ddd',\n// // //   borderRadius: '5px',\n// // //   outline: 'none',\n// // //   backgroundColor: '#f9f9f9',\n// // //   transition: 'border-color 0.3s ease',\n// // // };\n\n// // // const buttonStyle = {\n// // //   padding: '12px 20px',\n// // //   fontSize: '16px',\n// // //   backgroundColor: '#007bff',\n// // //   color: 'white',\n// // //   border: 'none',\n// // //   borderRadius: '5px',\n// // //   cursor: 'pointer',\n// // //   transition: 'background-color 0.3s ease',\n// // //   alignSelf: 'center',\n// // // };\n\n// // // export default StudentDetails;\n// // import React, { useState } from \"react\"; \n// // import { useNavigate } from \"react-router-dom\"; \n\n// // const StudentDetails = () => {\n// //   const [formData, setFormData] = useState({\n// //     name: \"\",          // Changed from studentname\n// //     usn: \"\",\n// //     email: \"\",\n// //     semester: \"\",      // Changed from sem\n// //     graduationYear: \"\", // Changed from yearofgraduation\n// //     specialization: \"\",\n// //   });\n\n// //   const [submitted, setSubmitted] = useState(false);\n// //   const [errorMessage, setErrorMessage] = useState(null); \n// //   const navigate = useNavigate(); \n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setSubmitted(false);\n// //     setErrorMessage(null);\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/students\", {\n// //         method: \"POST\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify(formData),\n// //       });\n\n// //       if (response.ok) {\n// //         setSubmitted(true);\n// //         setTimeout(() => {\n// //           navigate(\"/student/details-page\");\n// //         }, 3000);\n// //       } else {\n// //         const errorData = await response.json();\n// //         setErrorMessage(errorData.error || \"Submission failed. Try again.\");\n// //       }\n// //     } catch (error) {\n// //       setErrorMessage(\"A network error occurred. Please check your connection.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div style={{\n// //       maxWidth: '600px', \n// //       margin: '50px auto', \n// //       padding: '30px', \n// //       backgroundColor: '#ffffff', \n// //       borderRadius: '10px',\n// //       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n// //     }}>\n// //       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\n// //       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\n// //       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\n// //       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n// //         <input \n// //           name=\"name\"                 // Changed from studentname\n// //           type=\"text\" \n// //           placeholder=\"Student Name\" \n// //           value={formData.name}       // Changed from studentname\n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"usn\" \n// //           type=\"text\" \n// //           placeholder=\"USN\" \n// //           value={formData.usn} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"email\" \n// //           type=\"email\" \n// //           placeholder=\"Email\" \n// //           value={formData.email} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"semester\"             // Changed from sem\n// //           type=\"number\" \n// //           placeholder=\"Semester\" \n// //           value={formData.semester}   // Changed from sem\n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"graduationYear\"      // Changed from yearofgraduation\n// //           type=\"number\" \n// //           placeholder=\"Year of Graduation\" \n// //           value={formData.graduationYear}  // Changed from yearofgraduation\n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"specialization\" \n// //           type=\"text\" \n// //           placeholder=\"Specialization\" \n// //           value={formData.specialization} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <button type=\"submit\" style={buttonStyle}>Submit</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // // Inline styles remain unchanged\n// // const inputStyle = {\n// //   padding: '12px',\n// //   fontSize: '16px',\n// //   border: '1px solid #ddd',\n// //   borderRadius: '5px',\n// //   outline: 'none',\n// //   backgroundColor: '#f9f9f9',\n// //   transition: 'border-color 0.3s ease',\n// // };\n\n// // const buttonStyle = {\n// //   padding: '12px 20px',\n// //   fontSize: '16px',\n// //   backgroundColor: '#007bff',\n// //   color: 'white',\n// //   border: 'none',\n// //   borderRadius: '5px',\n// //   cursor: 'pointer',\n// //   transition: 'background-color 0.3s ease',\n// //   alignSelf: 'center',\n// // };\n\n// // export default StudentDetails;\n\n// import React, { useState } from \"react\"; \n// import { useNavigate } from \"react-router-dom\"; \n\n// const StudentDetails = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     usn: \"\",\n//     email: \"\",\n//     semester: \"\",\n//     graduationYear: \"\", // Fixed field name\n//     specialization: \"\",\n//   });\n\n//   const [submitted, setSubmitted] = useState(false);\n//   const [errorMessage, setErrorMessage] = useState(null); \n//   const navigate = useNavigate(); \n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setSubmitted(false);\n//     setErrorMessage(null);\n\n//     try {\n//       // Convert numbers before sending\n//       const dataToSend = {\n//         ...formData,\n//         semester: Number(formData.semester),\n//         graduationYear: Number(formData.graduationYear)\n//       };\n\n//       const response = await fetch(\"http://localhost:5000/api/students\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(dataToSend),\n//       });\n\n//       if (response.ok) {\n//         setSubmitted(true);\n//         setTimeout(() => navigate(\"/student/details-page\"), 2000);\n//       } else {\n//         const errorData = await response.json();\n//         setErrorMessage(\n//           errorData.error || \n//           errorData.message || \n//           \"Submission failed. Please try again.\"\n//         );\n//       }\n//     } catch (error) {\n//       setErrorMessage(\"Network error. Please check your connection.\");\n//     }\n//   };\n\n//   // JSX remains the same with updated field names...\n//   return (\n//     <div style={containerStyle}>\n//       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\n//       {submitted && (\n//         <p style={{ color: \"#28a745\", textAlign: 'center' }}>\n//           ✅ Details submitted successfully!\n//         </p>\n//       )}\n//       {errorMessage && (\n//         <p style={{ color: \"#dc3545\", textAlign: 'center' }}>\n//           ❌ {errorMessage}\n//         </p>\n//       )}\n//       <form onSubmit={handleSubmit} style={formStyle}>\n//         <input \n//           name=\"name\"\n//           type=\"text\" \n//           placeholder=\"Student Name\" \n//           value={formData.name} \n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"usn\" \n//           type=\"text\" \n//           placeholder=\"USN (e.g. 1VE20CS001)\" \n//           value={formData.usn} \n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"email\" \n//           type=\"email\" \n//           placeholder=\"Email (e.g. name@example.com)\" \n//           value={formData.email} \n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"semester\" \n//           type=\"number\" \n//           placeholder=\"Semester (1-8)\" \n//           value={formData.semester} \n//           onChange={handleChange} \n//           min=\"1\"\n//           max=\"8\"\n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"graduationYear\" \n//           type=\"number\" \n//           placeholder=\"Graduation Year (e.g. 2025)\" \n//           value={formData.graduationYear} \n//           onChange={handleChange} \n//           min=\"2000\"\n//           max=\"2030\"\n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"specialization\" \n//           type=\"text\" \n//           placeholder=\"Specialization (e.g. Computer Science)\" \n//           value={formData.specialization} \n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <button type=\"submit\" style={buttonStyle}>Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // CSS styles (unchanged)\n// const containerStyle = {\n//   maxWidth: '600px', \n//   margin: '50px auto', \n//   padding: '30px', \n//   backgroundColor: '#ffffff', \n//   borderRadius: '10px',\n//   boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n// };\n\n// const formStyle = {\n//   display: 'flex', \n//   flexDirection: 'column', \n//   gap: '15px'\n// };\n\n// const inputStyle = {\n//   padding: '12px',\n//   fontSize: '16px',\n//   border: '1px solid #ddd',\n//   borderRadius: '5px',\n//   outline: 'none',\n//   backgroundColor: '#f9f9f9',\n//   transition: 'border-color 0.3s ease',\n// };\n\n// const buttonStyle = {\n//   padding: '12px 20px',\n//   fontSize: '16px',\n//   backgroundColor: '#007bff',\n//   color: 'white',\n//   border: 'none',\n//   borderRadius: '5px',\n//   cursor: 'pointer',\n//   transition: 'background-color 0.3s ease',\n//   alignSelf: 'center',\n// };\n\n// export default StudentDetails;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDetails = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    usn: \"\",\n    email: \"\",\n    semester: \"\",\n    graduationYear: \"\",\n    specialization: \"\"\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const navigate = useNavigate();\n  const [buttonHover, setButtonHover] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitted(false);\n    setErrorMessage(null);\n    try {\n      const dataToSend = {\n        ...formData,\n        semester: Number(formData.semester),\n        graduationYear: Number(formData.graduationYear)\n      };\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(dataToSend)\n      });\n      if (response.ok) {\n        setSubmitted(true);\n        setTimeout(() => navigate(\"/student/details-page\"), 2000);\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || errorData.message || \"Submission failed. Please try again.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"Network error. Please check your connection.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerOuterStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes slideIn {\n            0% { transform: translateX(-100px); opacity: 0; }\n            100% { transform: translateX(0); opacity: 1; }\n          }\n          @keyframes float {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-10px); }\n            100% { transform: translateY(0px); }\n          }\n          @keyframes gradient {\n            0% { background-position: 0% 50%; }\n            50% { background-position: 100% 50%; }\n            100% { background-position: 0% 50%; }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: headerStyle,\n        children: \"Add Student Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: successStyle,\n        children: \"\\u2705 Details submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: errorStyle,\n        children: [\"\\u274C \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: formStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Student Name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"usn\",\n          type: \"text\",\n          placeholder: \"USN (e.g. 1VE20CS001)\",\n          value: formData.usn,\n          onChange: handleChange,\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email (e.g. name@example.com)\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"semester\",\n          type: \"number\",\n          placeholder: \"Semester (1-8)\",\n          value: formData.semester,\n          onChange: handleChange,\n          min: \"1\",\n          max: \"8\",\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"graduationYear\",\n          type: \"number\",\n          placeholder: \"Graduation Year (e.g. 2025)\",\n          value: formData.graduationYear,\n          onChange: handleChange,\n          min: \"2000\",\n          max: \"2030\",\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"specialization\",\n          type: \"text\",\n          placeholder: \"Specialization (e.g. Computer Science)\",\n          value: formData.specialization,\n          onChange: handleChange,\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            ...buttonStyle,\n            background: buttonHover ? 'linear-gradient(90deg, #ff8a00, #e52e71)' : 'linear-gradient(90deg, #4facfe, #00f2fe)',\n            transform: buttonHover ? 'scale(1.05)' : 'scale(1)',\n            boxShadow: buttonHover ? '0 10px 20px rgba(0, 0, 0, 0.2)' : '0 5px 15px rgba(0, 0, 0, 0.1)'\n          },\n          onMouseEnter: () => setButtonHover(true),\n          onMouseLeave: () => setButtonHover(false),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 5\n  }, this);\n};\n\n// New CSS styles with animations\n_s(StudentDetails, \"YcpRtutsqiKbtOne2Tl7j+jue2s=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDetails;\nconst containerOuterStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minHeight: '100vh',\n  background: 'linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab)',\n  backgroundSize: '400% 400%',\n  animation: 'gradient 15s ease infinite',\n  padding: '20px'\n};\nconst containerStyle = {\n  maxWidth: '600px',\n  width: '100%',\n  padding: '40px',\n  backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  backdropFilter: 'blur(10px)',\n  borderRadius: '20px',\n  border: '1px solid rgba(255, 255, 255, 0.2)',\n  boxShadow: '0 15px 35px rgba(0, 0, 0, 0.2)',\n  animation: 'slideIn 0.8s ease-out, float 6s ease-in-out infinite',\n  transform: 'translateY(0)'\n};\nconst headerStyle = {\n  textAlign: 'center',\n  marginBottom: '30px',\n  color: '#fff',\n  fontSize: '2.2rem',\n  fontWeight: '600',\n  textShadow: '0 2px 10px rgba(0, 0, 0, 0.2)'\n};\nconst formStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '25px'\n};\nconst inputStyle = {\n  padding: '16px 20px',\n  fontSize: '16px',\n  border: 'none',\n  borderRadius: '12px',\n  outline: 'none',\n  backgroundColor: 'rgba(255, 255, 255, 0.85)',\n  transition: 'all 0.3s ease',\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)'\n};\nconst buttonStyle = {\n  padding: '16px 40px',\n  fontSize: '18px',\n  fontWeight: '600',\n  color: 'white',\n  border: 'none',\n  borderRadius: '12px',\n  cursor: 'pointer',\n  transition: 'all 0.4s ease',\n  alignSelf: 'center',\n  marginTop: '15px',\n  letterSpacing: '1px',\n  backgroundSize: '200% auto',\n  backgroundPosition: 'left center',\n  boxShadow: '0 5px 15px rgba(0, 0, 0, 0.1)',\n  textShadow: '0 1px 2px rgba(0, 0, 0, 0.2)'\n};\nconst successStyle = {\n  color: '#d4edda',\n  textAlign: 'center',\n  padding: '15px',\n  marginBottom: '20px',\n  backgroundColor: 'rgba(40, 167, 69, 0.2)',\n  borderRadius: '8px',\n  fontWeight: '500',\n  fontSize: '1.1rem',\n  animation: 'slideIn 0.5s ease-out'\n};\nconst errorStyle = {\n  color: '#f8d7da',\n  textAlign: 'center',\n  padding: '15px',\n  marginBottom: '20px',\n  backgroundColor: 'rgba(220, 53, 69, 0.2)',\n  borderRadius: '8px',\n  fontWeight: '500',\n  fontSize: '1.1rem',\n  animation: 'slideIn 0.5s ease-out'\n};\nexport default StudentDetails;\nvar _c;\n$RefreshReg$(_c, \"StudentDetails\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","StudentDetails","_s","formData","setFormData","name","usn","email","semester","graduationYear","specialization","submitted","setSubmitted","errorMessage","setErrorMessage","navigate","buttonHover","setButtonHover","handleChange","e","target","value","handleSubmit","preventDefault","dataToSend","Number","response","fetch","method","headers","body","JSON","stringify","ok","setTimeout","errorData","json","error","message","style","containerOuterStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","containerStyle","headerStyle","successStyle","errorStyle","onSubmit","formStyle","type","placeholder","onChange","required","inputStyle","min","max","buttonStyle","background","transform","boxShadow","onMouseEnter","onMouseLeave","_c","display","alignItems","justifyContent","minHeight","backgroundSize","animation","padding","maxWidth","width","backgroundColor","backdropFilter","borderRadius","border","textAlign","marginBottom","color","fontSize","fontWeight","textShadow","flexDirection","gap","outline","transition","cursor","alignSelf","marginTop","letterSpacing","backgroundPosition","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/DB/DBMS/Frontend/src/pages/student/StudentDetails.js"],"sourcesContent":["// // // import React, { useState } from \"react\"; \r\n// // // import { useNavigate } from \"react-router-dom\"; \r\n\r\n// // // const StudentDetails = () => {\r\n// // //   const [formData, setFormData] = useState({\r\n// // //     studentname: \"\",\r\n// // //     usn: \"\",\r\n// // //     email: \"\",\r\n// // //     sem:\"\",\r\n// // //     yearofgraduation: \"\",\r\n// // //     specialization: \"\",\r\n// // //   });\r\n\r\n// // //   const [submitted, setSubmitted] = useState(false);\r\n// // //   const [errorMessage, setErrorMessage] = useState(null); \r\n// // //   const navigate = useNavigate(); \r\n\r\n// // //   const handleChange = (e) => {\r\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// // //   };\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     setSubmitted(false);\r\n// // //     setErrorMessage(null);\r\n  \r\n// // //     try {\r\n// // //       const response = await fetch(\"http://localhost:5000/api/students\", {\r\n// // //         method: \"POST\",\r\n// // //         headers: {\r\n// // //           \"Content-Type\": \"application/json\",\r\n// // //         },\r\n// // //         body: JSON.stringify(formData),\r\n// // //       });\r\n  \r\n// // //       if (response.ok) {\r\n// // //         setSubmitted(true);\r\n// // //         setTimeout(() => {\r\n// // //           navigate(\"/student/details-page\"); // Redirect to the list page after submission\r\n// // //         }, 3000);\r\n// // //       } else {\r\n// // //         const errorData = await response.json();\r\n// // //         setErrorMessage(errorData.message || \"Submission failed. Try again.\");\r\n// // //       }\r\n// // //     } catch (error) {\r\n// // //       setErrorMessage(\"A network error occurred. Please check your connection.\");\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div style={{\r\n// // //       maxWidth: '600px', \r\n// // //       margin: '50px auto', \r\n// // //       padding: '30px', \r\n// // //       backgroundColor: '#ffffff', \r\n// // //       borderRadius: '10px',\r\n// // //       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n// // //     }}>\r\n// // //       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\r\n// // //       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\r\n// // //       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\r\n// // //       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\r\n// // //         <input \r\n// // //           name=\"studentname\" \r\n// // //           type=\"text\" \r\n// // //           placeholder=\"Student Name\" \r\n// // //           value={formData.studentname} \r\n// // //           onChange={handleChange} \r\n// // //           required \r\n// // //           style={inputStyle} \r\n// // //         />\r\n// // //         <input \r\n// // //           name=\"usn\" \r\n// // //           type=\"text\" \r\n// // //           placeholder=\"USN\" \r\n// // //           value={formData.usn} \r\n// // //           onChange={handleChange} \r\n// // //           required \r\n// // //           style={inputStyle} \r\n// // //         />\r\n// // //         <input \r\n// // //           name=\"email\" \r\n// // //           type=\"email\" \r\n// // //           placeholder=\"Email\" \r\n// // //           value={formData.email} \r\n// // //           onChange={handleChange} \r\n// // //           required \r\n// // //           style={inputStyle} \r\n// // //         />\r\n// // //         <input \r\n// // //           name=\"sem\" \r\n// // //           type=\"number\" \r\n// // //           placeholder=\"Semester\" \r\n// // //           value={formData.sem} \r\n// // //           onChange={handleChange} \r\n// // //           required \r\n// // //           style={inputStyle} \r\n// // //         />\r\n// // //         <input \r\n// // //           name=\"yearofgraduation\" \r\n// // //           type=\"number\" \r\n// // //           placeholder=\"Year of Graduation\" \r\n// // //           value={formData.yearofgraduation} \r\n// // //           onChange={handleChange} \r\n// // //           required \r\n// // //           style={inputStyle} \r\n// // //         />\r\n// // //         <input \r\n// // //           name=\"specialization\" \r\n// // //           type=\"text\" \r\n// // //           placeholder=\"Specialization\" \r\n// // //           value={formData.specialization} \r\n// // //           onChange={handleChange} \r\n// // //           required \r\n// // //           style={inputStyle} \r\n// // //         />\r\n// // //         <button type=\"submit\" style={buttonStyle}>Submit</button>\r\n// // //       </form>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // // Inline styles for inputs and button\r\n// // // const inputStyle = {\r\n// // //   padding: '12px',\r\n// // //   fontSize: '16px',\r\n// // //   border: '1px solid #ddd',\r\n// // //   borderRadius: '5px',\r\n// // //   outline: 'none',\r\n// // //   backgroundColor: '#f9f9f9',\r\n// // //   transition: 'border-color 0.3s ease',\r\n// // // };\r\n\r\n// // // const buttonStyle = {\r\n// // //   padding: '12px 20px',\r\n// // //   fontSize: '16px',\r\n// // //   backgroundColor: '#007bff',\r\n// // //   color: 'white',\r\n// // //   border: 'none',\r\n// // //   borderRadius: '5px',\r\n// // //   cursor: 'pointer',\r\n// // //   transition: 'background-color 0.3s ease',\r\n// // //   alignSelf: 'center',\r\n// // // };\r\n\r\n// // // export default StudentDetails;\r\n// // import React, { useState } from \"react\"; \r\n// // import { useNavigate } from \"react-router-dom\"; \r\n\r\n// // const StudentDetails = () => {\r\n// //   const [formData, setFormData] = useState({\r\n// //     name: \"\",          // Changed from studentname\r\n// //     usn: \"\",\r\n// //     email: \"\",\r\n// //     semester: \"\",      // Changed from sem\r\n// //     graduationYear: \"\", // Changed from yearofgraduation\r\n// //     specialization: \"\",\r\n// //   });\r\n\r\n// //   const [submitted, setSubmitted] = useState(false);\r\n// //   const [errorMessage, setErrorMessage] = useState(null); \r\n// //   const navigate = useNavigate(); \r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setSubmitted(false);\r\n// //     setErrorMessage(null);\r\n  \r\n// //     try {\r\n// //       const response = await fetch(\"http://localhost:5000/api/students\", {\r\n// //         method: \"POST\",\r\n// //         headers: {\r\n// //           \"Content-Type\": \"application/json\",\r\n// //         },\r\n// //         body: JSON.stringify(formData),\r\n// //       });\r\n  \r\n// //       if (response.ok) {\r\n// //         setSubmitted(true);\r\n// //         setTimeout(() => {\r\n// //           navigate(\"/student/details-page\");\r\n// //         }, 3000);\r\n// //       } else {\r\n// //         const errorData = await response.json();\r\n// //         setErrorMessage(errorData.error || \"Submission failed. Try again.\");\r\n// //       }\r\n// //     } catch (error) {\r\n// //       setErrorMessage(\"A network error occurred. Please check your connection.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div style={{\r\n// //       maxWidth: '600px', \r\n// //       margin: '50px auto', \r\n// //       padding: '30px', \r\n// //       backgroundColor: '#ffffff', \r\n// //       borderRadius: '10px',\r\n// //       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n// //     }}>\r\n// //       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\r\n// //       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\r\n// //       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\r\n// //       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\r\n// //         <input \r\n// //           name=\"name\"                 // Changed from studentname\r\n// //           type=\"text\" \r\n// //           placeholder=\"Student Name\" \r\n// //           value={formData.name}       // Changed from studentname\r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"usn\" \r\n// //           type=\"text\" \r\n// //           placeholder=\"USN\" \r\n// //           value={formData.usn} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"email\" \r\n// //           type=\"email\" \r\n// //           placeholder=\"Email\" \r\n// //           value={formData.email} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"semester\"             // Changed from sem\r\n// //           type=\"number\" \r\n// //           placeholder=\"Semester\" \r\n// //           value={formData.semester}   // Changed from sem\r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"graduationYear\"      // Changed from yearofgraduation\r\n// //           type=\"number\" \r\n// //           placeholder=\"Year of Graduation\" \r\n// //           value={formData.graduationYear}  // Changed from yearofgraduation\r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"specialization\" \r\n// //           type=\"text\" \r\n// //           placeholder=\"Specialization\" \r\n// //           value={formData.specialization} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <button type=\"submit\" style={buttonStyle}>Submit</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // // Inline styles remain unchanged\r\n// // const inputStyle = {\r\n// //   padding: '12px',\r\n// //   fontSize: '16px',\r\n// //   border: '1px solid #ddd',\r\n// //   borderRadius: '5px',\r\n// //   outline: 'none',\r\n// //   backgroundColor: '#f9f9f9',\r\n// //   transition: 'border-color 0.3s ease',\r\n// // };\r\n\r\n// // const buttonStyle = {\r\n// //   padding: '12px 20px',\r\n// //   fontSize: '16px',\r\n// //   backgroundColor: '#007bff',\r\n// //   color: 'white',\r\n// //   border: 'none',\r\n// //   borderRadius: '5px',\r\n// //   cursor: 'pointer',\r\n// //   transition: 'background-color 0.3s ease',\r\n// //   alignSelf: 'center',\r\n// // };\r\n\r\n// // export default StudentDetails;\r\n\r\n// import React, { useState } from \"react\"; \r\n// import { useNavigate } from \"react-router-dom\"; \r\n\r\n// const StudentDetails = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     usn: \"\",\r\n//     email: \"\",\r\n//     semester: \"\",\r\n//     graduationYear: \"\", // Fixed field name\r\n//     specialization: \"\",\r\n//   });\r\n\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [errorMessage, setErrorMessage] = useState(null); \r\n//   const navigate = useNavigate(); \r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setSubmitted(false);\r\n//     setErrorMessage(null);\r\n  \r\n//     try {\r\n//       // Convert numbers before sending\r\n//       const dataToSend = {\r\n//         ...formData,\r\n//         semester: Number(formData.semester),\r\n//         graduationYear: Number(formData.graduationYear)\r\n//       };\r\n      \r\n//       const response = await fetch(\"http://localhost:5000/api/students\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(dataToSend),\r\n//       });\r\n  \r\n//       if (response.ok) {\r\n//         setSubmitted(true);\r\n//         setTimeout(() => navigate(\"/student/details-page\"), 2000);\r\n//       } else {\r\n//         const errorData = await response.json();\r\n//         setErrorMessage(\r\n//           errorData.error || \r\n//           errorData.message || \r\n//           \"Submission failed. Please try again.\"\r\n//         );\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage(\"Network error. Please check your connection.\");\r\n//     }\r\n//   };\r\n\r\n//   // JSX remains the same with updated field names...\r\n//   return (\r\n//     <div style={containerStyle}>\r\n//       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\r\n//       {submitted && (\r\n//         <p style={{ color: \"#28a745\", textAlign: 'center' }}>\r\n//           ✅ Details submitted successfully!\r\n//         </p>\r\n//       )}\r\n//       {errorMessage && (\r\n//         <p style={{ color: \"#dc3545\", textAlign: 'center' }}>\r\n//           ❌ {errorMessage}\r\n//         </p>\r\n//       )}\r\n//       <form onSubmit={handleSubmit} style={formStyle}>\r\n//         <input \r\n//           name=\"name\"\r\n//           type=\"text\" \r\n//           placeholder=\"Student Name\" \r\n//           value={formData.name} \r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"usn\" \r\n//           type=\"text\" \r\n//           placeholder=\"USN (e.g. 1VE20CS001)\" \r\n//           value={formData.usn} \r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"email\" \r\n//           type=\"email\" \r\n//           placeholder=\"Email (e.g. name@example.com)\" \r\n//           value={formData.email} \r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"semester\" \r\n//           type=\"number\" \r\n//           placeholder=\"Semester (1-8)\" \r\n//           value={formData.semester} \r\n//           onChange={handleChange} \r\n//           min=\"1\"\r\n//           max=\"8\"\r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"graduationYear\" \r\n//           type=\"number\" \r\n//           placeholder=\"Graduation Year (e.g. 2025)\" \r\n//           value={formData.graduationYear} \r\n//           onChange={handleChange} \r\n//           min=\"2000\"\r\n//           max=\"2030\"\r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"specialization\" \r\n//           type=\"text\" \r\n//           placeholder=\"Specialization (e.g. Computer Science)\" \r\n//           value={formData.specialization} \r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <button type=\"submit\" style={buttonStyle}>Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // CSS styles (unchanged)\r\n// const containerStyle = {\r\n//   maxWidth: '600px', \r\n//   margin: '50px auto', \r\n//   padding: '30px', \r\n//   backgroundColor: '#ffffff', \r\n//   borderRadius: '10px',\r\n//   boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n// };\r\n\r\n// const formStyle = {\r\n//   display: 'flex', \r\n//   flexDirection: 'column', \r\n//   gap: '15px'\r\n// };\r\n\r\n// const inputStyle = {\r\n//   padding: '12px',\r\n//   fontSize: '16px',\r\n//   border: '1px solid #ddd',\r\n//   borderRadius: '5px',\r\n//   outline: 'none',\r\n//   backgroundColor: '#f9f9f9',\r\n//   transition: 'border-color 0.3s ease',\r\n// };\r\n\r\n// const buttonStyle = {\r\n//   padding: '12px 20px',\r\n//   fontSize: '16px',\r\n//   backgroundColor: '#007bff',\r\n//   color: 'white',\r\n//   border: 'none',\r\n//   borderRadius: '5px',\r\n//   cursor: 'pointer',\r\n//   transition: 'background-color 0.3s ease',\r\n//   alignSelf: 'center',\r\n// };\r\n\r\n// export default StudentDetails;\r\nimport React, { useState } from \"react\"; \r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nconst StudentDetails = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    usn: \"\",\r\n    email: \"\",\r\n    semester: \"\",\r\n    graduationYear: \"\",\r\n    specialization: \"\",\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null); \r\n  const navigate = useNavigate(); \r\n  const [buttonHover, setButtonHover] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(false);\r\n    setErrorMessage(null);\r\n  \r\n    try {\r\n      const dataToSend = {\r\n        ...formData,\r\n        semester: Number(formData.semester),\r\n        graduationYear: Number(formData.graduationYear)\r\n      };\r\n      \r\n      const response = await fetch(\"http://localhost:5000/api/students\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setSubmitted(true);\r\n        setTimeout(() => navigate(\"/student/details-page\"), 2000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setErrorMessage(\r\n          errorData.error || \r\n          errorData.message || \r\n          \"Submission failed. Please try again.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Network error. Please check your connection.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={containerOuterStyle}>\r\n      <style>\r\n        {`\r\n          @keyframes slideIn {\r\n            0% { transform: translateX(-100px); opacity: 0; }\r\n            100% { transform: translateX(0); opacity: 1; }\r\n          }\r\n          @keyframes float {\r\n            0% { transform: translateY(0px); }\r\n            50% { transform: translateY(-10px); }\r\n            100% { transform: translateY(0px); }\r\n          }\r\n          @keyframes gradient {\r\n            0% { background-position: 0% 50%; }\r\n            50% { background-position: 100% 50%; }\r\n            100% { background-position: 0% 50%; }\r\n          }\r\n        `}\r\n      </style>\r\n      \r\n      <div style={containerStyle}>\r\n        <h2 style={headerStyle}>Add Student Details</h2>\r\n        \r\n        {submitted && (\r\n          <div style={successStyle}>\r\n            ✅ Details submitted successfully!\r\n          </div>\r\n        )}\r\n        \r\n        {errorMessage && (\r\n          <div style={errorStyle}>\r\n            ❌ {errorMessage}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit} style={formStyle}>\r\n          <input \r\n            name=\"name\"\r\n            type=\"text\" \r\n            placeholder=\"Student Name\" \r\n            value={formData.name} \r\n            onChange={handleChange} \r\n            required \r\n            style={inputStyle} \r\n          />\r\n          \r\n          <input \r\n            name=\"usn\" \r\n            type=\"text\" \r\n            placeholder=\"USN (e.g. 1VE20CS001)\" \r\n            value={formData.usn} \r\n            onChange={handleChange} \r\n            required \r\n            style={inputStyle} \r\n          />\r\n          \r\n          <input \r\n            name=\"email\" \r\n            type=\"email\" \r\n            placeholder=\"Email (e.g. name@example.com)\" \r\n            value={formData.email} \r\n            onChange={handleChange} \r\n            required \r\n            style={inputStyle} \r\n          />\r\n          \r\n          <input \r\n            name=\"semester\" \r\n            type=\"number\" \r\n            placeholder=\"Semester (1-8)\" \r\n            value={formData.semester} \r\n            onChange={handleChange} \r\n            min=\"1\"\r\n            max=\"8\"\r\n            required \r\n            style={inputStyle} \r\n          />\r\n          \r\n          <input \r\n            name=\"graduationYear\" \r\n            type=\"number\" \r\n            placeholder=\"Graduation Year (e.g. 2025)\" \r\n            value={formData.graduationYear} \r\n            onChange={handleChange} \r\n            min=\"2000\"\r\n            max=\"2030\"\r\n            required \r\n            style={inputStyle} \r\n          />\r\n          \r\n          <input \r\n            name=\"specialization\" \r\n            type=\"text\" \r\n            placeholder=\"Specialization (e.g. Computer Science)\" \r\n            value={formData.specialization} \r\n            onChange={handleChange} \r\n            required \r\n            style={inputStyle} \r\n          />\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            style={{\r\n              ...buttonStyle,\r\n              background: buttonHover \r\n                ? 'linear-gradient(90deg, #ff8a00, #e52e71)'\r\n                : 'linear-gradient(90deg, #4facfe, #00f2fe)',\r\n              transform: buttonHover ? 'scale(1.05)' : 'scale(1)',\r\n              boxShadow: buttonHover \r\n                ? '0 10px 20px rgba(0, 0, 0, 0.2)' \r\n                : '0 5px 15px rgba(0, 0, 0, 0.1)'\r\n            }}\r\n            onMouseEnter={() => setButtonHover(true)}\r\n            onMouseLeave={() => setButtonHover(false)}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// New CSS styles with animations\r\nconst containerOuterStyle = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  minHeight: '100vh',\r\n  background: 'linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab)',\r\n  backgroundSize: '400% 400%',\r\n  animation: 'gradient 15s ease infinite',\r\n  padding: '20px',\r\n};\r\n\r\nconst containerStyle = {\r\n  maxWidth: '600px',\r\n  width: '100%',\r\n  padding: '40px',\r\n  backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n  backdropFilter: 'blur(10px)',\r\n  borderRadius: '20px',\r\n  border: '1px solid rgba(255, 255, 255, 0.2)',\r\n  boxShadow: '0 15px 35px rgba(0, 0, 0, 0.2)',\r\n  animation: 'slideIn 0.8s ease-out, float 6s ease-in-out infinite',\r\n  transform: 'translateY(0)',\r\n};\r\n\r\nconst headerStyle = {\r\n  textAlign: 'center',\r\n  marginBottom: '30px',\r\n  color: '#fff',\r\n  fontSize: '2.2rem',\r\n  fontWeight: '600',\r\n  textShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\r\n};\r\n\r\nconst formStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: '25px',\r\n};\r\n\r\nconst inputStyle = {\r\n  padding: '16px 20px',\r\n  fontSize: '16px',\r\n  border: 'none',\r\n  borderRadius: '12px',\r\n  outline: 'none',\r\n  backgroundColor: 'rgba(255, 255, 255, 0.85)',\r\n  transition: 'all 0.3s ease',\r\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '16px 40px',\r\n  fontSize: '18px',\r\n  fontWeight: '600',\r\n  color: 'white',\r\n  border: 'none',\r\n  borderRadius: '12px',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.4s ease',\r\n  alignSelf: 'center',\r\n  marginTop: '15px',\r\n  letterSpacing: '1px',\r\n  backgroundSize: '200% auto',\r\n  backgroundPosition: 'left center',\r\n  boxShadow: '0 5px 15px rgba(0, 0, 0, 0.1)',\r\n  textShadow: '0 1px 2px rgba(0, 0, 0, 0.2)',\r\n};\r\n\r\nconst successStyle = {\r\n  color: '#d4edda',\r\n  textAlign: 'center',\r\n  padding: '15px',\r\n  marginBottom: '20px',\r\n  backgroundColor: 'rgba(40, 167, 69, 0.2)',\r\n  borderRadius: '8px',\r\n  fontWeight: '500',\r\n  fontSize: '1.1rem',\r\n  animation: 'slideIn 0.5s ease-out',\r\n};\r\n\r\nconst errorStyle = {\r\n  color: '#f8d7da',\r\n  textAlign: 'center',\r\n  padding: '15px',\r\n  marginBottom: '20px',\r\n  backgroundColor: 'rgba(220, 53, 69, 0.2)',\r\n  borderRadius: '8px',\r\n  fontWeight: '500',\r\n  fontSize: '1.1rem',\r\n  animation: 'slideIn 0.5s ease-out',\r\n};\r\n\r\nexport default StudentDetails;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}