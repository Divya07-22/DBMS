{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\dbms\\\\DBMS\\\\Frontend\\\\src\\\\pages\\\\FacultySignUp.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const inputStyle = {\n//     width: \"100%\",\n//     padding: \"0.8rem\",\n//     margin: \"0.8rem 0\",\n//     border: \"1px solid #ccc\",\n//     borderRadius: \"5px\",\n//     fontSize: \"1rem\",\n//     outline: \"none\",\n//     boxSizing: \"border-box\",\n// };\n\n// const buttonStyle = {\n//     width: \"100%\",\n//     padding: \"0.8rem\",\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     fontSize: \"1rem\",\n//     fontWeight: \"bold\",\n//     cursor: \"pointer\",\n//     transition: \"background-color 0.3s\",\n// };\n\n// const FacultySignUp = () => {\n//     const [formData, setFormData] = useState({\n//         name: \"\",\n//         email: \"\",\n//         password: \"\",\n//         confirmPassword: \"\",\n//     });\n\n//     const [error, setError] = useState(\"\"); // To handle error messages\n//     const [success, setSuccess] = useState(\"\"); // To handle success messages\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\n//         setError(\"\"); // Reset error on input change\n//         setSuccess(\"\"); // Reset success on input change\n//     };\n\n//     const validateForm = () => {\n//         if (!formData.name || !formData.email || !formData.password || !formData.confirmPassword) {\n//             setError(\"All fields are required.\");\n//             return false;\n//         }\n//         if (formData.password !== formData.confirmPassword) {\n//             setError(\"Passwords do not match.\");\n//             return false;\n//         }\n//         if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n//             setError(\"Please enter a valid email.\");\n//             return false;\n//         }\n//         return true;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         // Validate form fields\n//         if (!validateForm()) {\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch(\"http://localhost:5000/api/faculty/signup\", {\n//                 method: \"POST\",\n//                 headers: { \"Content-Type\": \"application/json\" },\n//                 body: JSON.stringify({\n//                     name: formData.name,\n//                     email: formData.email,\n//                     password: formData.password,\n//                     role: \"faculty\",\n//                 }),\n//             });\n\n//             const data = await response.json();\n\n//             if (response.ok) {\n//                 // Display success alert\n//                 window.alert(\"Signup successful! Redirecting to dashboard...\");\n//                 setSuccess(\"Signup successful! Redirecting to dashboard...\");\n//                 setTimeout(() => {\n//                     navigate(\"/faculty/dashboard\"); // Redirect after success\n//                 }, 2000);\n//             } else {\n//                 // Display error alert\n//                 window.alert(data.error || \"Signup failed. Please try again.\");\n//                 setError(data.error || \"Signup failed. Please try again.\");\n//             }\n//         } catch (error) {\n//             // Display error alert for unexpected issues\n//             window.alert(\"An error occurred. Please try again.\");\n//             setError(\"An error occurred. Please try again.\");\n//         }\n//     };\n\n//     return (\n//         <div style={{ marginTop: \"20px\" }}>\n//             <h2 style={{ textAlign: \"center\" }}>Faculty Sign Up</h2>\n//             {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\n//             {success && <p style={{ color: \"green\", textAlign: \"center\" }}>{success}</p>}\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     name=\"name\"\n//                     type=\"text\"\n//                     placeholder=\"Name\"\n//                     onChange={handleChange}\n//                     value={formData.name}\n//                     style={inputStyle}\n//                 />\n//                 <input\n//                     name=\"email\"\n//                     type=\"email\"\n//                     placeholder=\"Email\"\n//                     onChange={handleChange}\n//                     value={formData.email}\n//                     style={inputStyle}\n//                 />\n//                 <input\n//                     name=\"password\"\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                     onChange={handleChange}\n//                     value={formData.password}\n//                     style={inputStyle}\n//                 />\n//                 <input\n//                     name=\"confirmPassword\"\n//                     type=\"password\"\n//                     placeholder=\"Confirm Password\"\n//                     onChange={handleChange}\n//                     value={formData.confirmPassword}\n//                     style={inputStyle}\n//                 />\n//                 <button\n//                     type=\"submit\"\n//                     style={buttonStyle}\n//                     disabled={\n//                         !formData.name ||\n//                         !formData.email ||\n//                         !formData.password ||\n//                         !formData.confirmPassword ||\n//                         formData.password !== formData.confirmPassword\n//                     }\n//                 >\n//                     Sign Up\n//                 </button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default FacultySignUp;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputStyle = {\n  width: \"100%\",\n  padding: \"0.8rem\",\n  margin: \"0.8rem 0\",\n  border: \"2px solid #4CAF50\",\n  borderRadius: \"5px\",\n  fontSize: \"1rem\",\n  outline: \"none\",\n  boxSizing: \"border-box\",\n  transition: \"border-color 0.3s ease\"\n};\nconst inputFocusStyle = {\n  ...inputStyle,\n  borderColor: \"#2e7d32\"\n};\nconst buttonStyle = {\n  width: \"100%\",\n  padding: \"0.8rem\",\n  backgroundColor: \"#4CAF50\",\n  color: \"white\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  fontSize: \"1rem\",\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  transition: \"background-color 0.3s, transform 0.3s\"\n};\nconst buttonHoverStyle = {\n  ...buttonStyle,\n  backgroundColor: \"#45a049\",\n  transform: \"scale(1.05)\"\n};\nconst FacultySignUp = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [error, setError] = useState(\"\"); // To handle error messages\n  const [success, setSuccess] = useState(\"\"); // To handle success messages\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\"); // Reset error on input change\n    setSuccess(\"\"); // Reset success on input change\n  };\n  const validateForm = () => {\n    if (!formData.name || !formData.email || !formData.password || !formData.confirmPassword) {\n      setError(\"All fields are required.\");\n      return false;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return false;\n    }\n    if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      setError(\"Please enter a valid email.\");\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form fields\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/faculty/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          email: formData.email,\n          password: formData.password,\n          role: \"faculty\"\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Display success alert\n        window.alert(\"Signup successful! Redirecting to dashboard...\");\n        setSuccess(\"Signup successful! Redirecting to dashboard...\");\n        setTimeout(() => {\n          navigate(\"/faculty/dashboard\"); // Redirect after success\n        }, 2000);\n      } else {\n        // Display error alert\n        window.alert(data.error || \"Signup failed. Please try again.\");\n        setError(data.error || \"Signup failed. Please try again.\");\n      }\n    } catch (error) {\n      // Display error alert for unexpected issues\n      window.alert(\"An error occurred. Please try again.\");\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      maxWidth: \"500px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#4CAF50\"\n      },\n      children: \"Faculty Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\",\n        textAlign: \"center\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: handleChange,\n        value: formData.name,\n        style: formData.name ? inputFocusStyle : inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        value: formData.email,\n        style: formData.email ? inputFocusStyle : inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        value: formData.password,\n        style: formData.password ? inputFocusStyle : inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"confirmPassword\",\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        onChange: handleChange,\n        value: formData.confirmPassword,\n        style: formData.confirmPassword ? inputFocusStyle : inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: buttonStyle,\n        disabled: !formData.name || !formData.email || !formData.password || !formData.confirmPassword || formData.password !== formData.confirmPassword,\n        onMouseEnter: e => e.target.style.backgroundColor = \"#45a049\",\n        onMouseLeave: e => e.target.style.backgroundColor = \"#4CAF50\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 9\n  }, this);\n};\n_s(FacultySignUp, \"ubdWj4y/M8A/B0+QymwheXxEnHc=\", false, function () {\n  return [useNavigate];\n});\n_c = FacultySignUp;\nexport default FacultySignUp;\nvar _c;\n$RefreshReg$(_c, \"FacultySignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","inputStyle","width","padding","margin","border","borderRadius","fontSize","outline","boxSizing","transition","inputFocusStyle","borderColor","buttonStyle","backgroundColor","color","fontWeight","cursor","buttonHoverStyle","transform","FacultySignUp","_s","formData","setFormData","name","email","password","confirmPassword","error","setError","success","setSuccess","navigate","handleChange","e","target","value","validateForm","test","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","role","data","json","ok","window","alert","setTimeout","style","marginTop","maxWidth","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","disabled","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/dbms/DBMS/Frontend/src/pages/FacultySignUp.js"],"sourcesContent":["\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const inputStyle = {\r\n//     width: \"100%\",\r\n//     padding: \"0.8rem\",\r\n//     margin: \"0.8rem 0\",\r\n//     border: \"1px solid #ccc\",\r\n//     borderRadius: \"5px\",\r\n//     fontSize: \"1rem\",\r\n//     outline: \"none\",\r\n//     boxSizing: \"border-box\",\r\n// };\r\n\r\n// const buttonStyle = {\r\n//     width: \"100%\",\r\n//     padding: \"0.8rem\",\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     fontSize: \"1rem\",\r\n//     fontWeight: \"bold\",\r\n//     cursor: \"pointer\",\r\n//     transition: \"background-color 0.3s\",\r\n// };\r\n\r\n// const FacultySignUp = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         name: \"\",\r\n//         email: \"\",\r\n//         password: \"\",\r\n//         confirmPassword: \"\",\r\n//     });\r\n\r\n//     const [error, setError] = useState(\"\"); // To handle error messages\r\n//     const [success, setSuccess] = useState(\"\"); // To handle success messages\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//         setError(\"\"); // Reset error on input change\r\n//         setSuccess(\"\"); // Reset success on input change\r\n//     };\r\n\r\n//     const validateForm = () => {\r\n//         if (!formData.name || !formData.email || !formData.password || !formData.confirmPassword) {\r\n//             setError(\"All fields are required.\");\r\n//             return false;\r\n//         }\r\n//         if (formData.password !== formData.confirmPassword) {\r\n//             setError(\"Passwords do not match.\");\r\n//             return false;\r\n//         }\r\n//         if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n//             setError(\"Please enter a valid email.\");\r\n//             return false;\r\n//         }\r\n//         return true;\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         // Validate form fields\r\n//         if (!validateForm()) {\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:5000/api/faculty/signup\", {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-Type\": \"application/json\" },\r\n//                 body: JSON.stringify({\r\n//                     name: formData.name,\r\n//                     email: formData.email,\r\n//                     password: formData.password,\r\n//                     role: \"faculty\",\r\n//                 }),\r\n//             });\r\n\r\n//             const data = await response.json();\r\n\r\n//             if (response.ok) {\r\n//                 // Display success alert\r\n//                 window.alert(\"Signup successful! Redirecting to dashboard...\");\r\n//                 setSuccess(\"Signup successful! Redirecting to dashboard...\");\r\n//                 setTimeout(() => {\r\n//                     navigate(\"/faculty/dashboard\"); // Redirect after success\r\n//                 }, 2000);\r\n//             } else {\r\n//                 // Display error alert\r\n//                 window.alert(data.error || \"Signup failed. Please try again.\");\r\n//                 setError(data.error || \"Signup failed. Please try again.\");\r\n//             }\r\n//         } catch (error) {\r\n//             // Display error alert for unexpected issues\r\n//             window.alert(\"An error occurred. Please try again.\");\r\n//             setError(\"An error occurred. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ marginTop: \"20px\" }}>\r\n//             <h2 style={{ textAlign: \"center\" }}>Faculty Sign Up</h2>\r\n//             {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\r\n//             {success && <p style={{ color: \"green\", textAlign: \"center\" }}>{success}</p>}\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input\r\n//                     name=\"name\"\r\n//                     type=\"text\"\r\n//                     placeholder=\"Name\"\r\n//                     onChange={handleChange}\r\n//                     value={formData.name}\r\n//                     style={inputStyle}\r\n//                 />\r\n//                 <input\r\n//                     name=\"email\"\r\n//                     type=\"email\"\r\n//                     placeholder=\"Email\"\r\n//                     onChange={handleChange}\r\n//                     value={formData.email}\r\n//                     style={inputStyle}\r\n//                 />\r\n//                 <input\r\n//                     name=\"password\"\r\n//                     type=\"password\"\r\n//                     placeholder=\"Password\"\r\n//                     onChange={handleChange}\r\n//                     value={formData.password}\r\n//                     style={inputStyle}\r\n//                 />\r\n//                 <input\r\n//                     name=\"confirmPassword\"\r\n//                     type=\"password\"\r\n//                     placeholder=\"Confirm Password\"\r\n//                     onChange={handleChange}\r\n//                     value={formData.confirmPassword}\r\n//                     style={inputStyle}\r\n//                 />\r\n//                 <button\r\n//                     type=\"submit\"\r\n//                     style={buttonStyle}\r\n//                     disabled={\r\n//                         !formData.name ||\r\n//                         !formData.email ||\r\n//                         !formData.password ||\r\n//                         !formData.confirmPassword ||\r\n//                         formData.password !== formData.confirmPassword\r\n//                     }\r\n//                 >\r\n//                     Sign Up\r\n//                 </button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default FacultySignUp;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst inputStyle = {\r\n    width: \"100%\",\r\n    padding: \"0.8rem\",\r\n    margin: \"0.8rem 0\",\r\n    border: \"2px solid #4CAF50\",\r\n    borderRadius: \"5px\",\r\n    fontSize: \"1rem\",\r\n    outline: \"none\",\r\n    boxSizing: \"border-box\",\r\n    transition: \"border-color 0.3s ease\",\r\n};\r\n\r\nconst inputFocusStyle = {\r\n    ...inputStyle,\r\n    borderColor: \"#2e7d32\",\r\n};\r\n\r\nconst buttonStyle = {\r\n    width: \"100%\",\r\n    padding: \"0.8rem\",\r\n    backgroundColor: \"#4CAF50\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    transition: \"background-color 0.3s, transform 0.3s\",\r\n};\r\n\r\nconst buttonHoverStyle = {\r\n    ...buttonStyle,\r\n    backgroundColor: \"#45a049\",\r\n    transform: \"scale(1.05)\",\r\n};\r\n\r\nconst FacultySignUp = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    const [error, setError] = useState(\"\"); // To handle error messages\r\n    const [success, setSuccess] = useState(\"\"); // To handle success messages\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        setError(\"\"); // Reset error on input change\r\n        setSuccess(\"\"); // Reset success on input change\r\n    };\r\n\r\n    const validateForm = () => {\r\n        if (!formData.name || !formData.email || !formData.password || !formData.confirmPassword) {\r\n            setError(\"All fields are required.\");\r\n            return false;\r\n        }\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setError(\"Passwords do not match.\");\r\n            return false;\r\n        }\r\n        if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            setError(\"Please enter a valid email.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate form fields\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/faculty/signup\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    name: formData.name,\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    role: \"faculty\",\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                // Display success alert\r\n                window.alert(\"Signup successful! Redirecting to dashboard...\");\r\n                setSuccess(\"Signup successful! Redirecting to dashboard...\");\r\n                setTimeout(() => {\r\n                    navigate(\"/faculty/dashboard\"); // Redirect after success\r\n                }, 2000);\r\n            } else {\r\n                // Display error alert\r\n                window.alert(data.error || \"Signup failed. Please try again.\");\r\n                setError(data.error || \"Signup failed. Please try again.\");\r\n            }\r\n        } catch (error) {\r\n            // Display error alert for unexpected issues\r\n            window.alert(\"An error occurred. Please try again.\");\r\n            setError(\"An error occurred. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginTop: \"20px\", maxWidth: \"500px\", margin: \"0 auto\" }}>\r\n            <h2 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Faculty Sign Up</h2>\r\n            {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\r\n            {success && <p style={{ color: \"green\", textAlign: \"center\" }}>{success}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    onChange={handleChange}\r\n                    value={formData.name}\r\n                    style={formData.name ? inputFocusStyle : inputStyle}\r\n                />\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                    value={formData.email}\r\n                    style={formData.email ? inputFocusStyle : inputStyle}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                    value={formData.password}\r\n                    style={formData.password ? inputFocusStyle : inputStyle}\r\n                />\r\n                <input\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={handleChange}\r\n                    value={formData.confirmPassword}\r\n                    style={formData.confirmPassword ? inputFocusStyle : inputStyle}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    style={buttonStyle}\r\n                    disabled={\r\n                        !formData.name ||\r\n                        !formData.email ||\r\n                        !formData.password ||\r\n                        !formData.confirmPassword ||\r\n                        formData.password !== formData.confirmPassword\r\n                    }\r\n                    onMouseEnter={(e) => (e.target.style.backgroundColor = \"#45a049\")}\r\n                    onMouseLeave={(e) => (e.target.style.backgroundColor = \"#4CAF50\")}\r\n                >\r\n                    Sign Up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FacultySignUp;\r\n"],"mappings":";;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE,QAAQ;EACjBC,MAAM,EAAE,UAAU;EAClBC,MAAM,EAAE,mBAAmB;EAC3BC,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE,MAAM;EAChBC,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE,YAAY;EACvBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,eAAe,GAAG;EACpB,GAAGV,UAAU;EACbW,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAG;EAChBX,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE,QAAQ;EACjBW,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}