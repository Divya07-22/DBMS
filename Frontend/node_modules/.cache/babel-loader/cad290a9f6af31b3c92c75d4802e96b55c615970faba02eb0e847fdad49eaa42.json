{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\DB\\\\DBMS\\\\Frontend\\\\src\\\\pages\\\\student\\\\StudentDetails.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\"; \n// // import { useNavigate } from \"react-router-dom\"; \n\n// // const StudentDetails = () => {\n// //   const [formData, setFormData] = useState({\n// //     studentname: \"\",\n// //     usn: \"\",\n// //     email: \"\",\n// //     sem:\"\",\n// //     yearofgraduation: \"\",\n// //     specialization: \"\",\n// //   });\n\n// //   const [submitted, setSubmitted] = useState(false);\n// //   const [errorMessage, setErrorMessage] = useState(null); \n// //   const navigate = useNavigate(); \n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setSubmitted(false);\n// //     setErrorMessage(null);\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/students\", {\n// //         method: \"POST\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify(formData),\n// //       });\n\n// //       if (response.ok) {\n// //         setSubmitted(true);\n// //         setTimeout(() => {\n// //           navigate(\"/student/details-page\"); // Redirect to the list page after submission\n// //         }, 3000);\n// //       } else {\n// //         const errorData = await response.json();\n// //         setErrorMessage(errorData.message || \"Submission failed. Try again.\");\n// //       }\n// //     } catch (error) {\n// //       setErrorMessage(\"A network error occurred. Please check your connection.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div style={{\n// //       maxWidth: '600px', \n// //       margin: '50px auto', \n// //       padding: '30px', \n// //       backgroundColor: '#ffffff', \n// //       borderRadius: '10px',\n// //       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n// //     }}>\n// //       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\n// //       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\n// //       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\n// //       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n// //         <input \n// //           name=\"studentname\" \n// //           type=\"text\" \n// //           placeholder=\"Student Name\" \n// //           value={formData.studentname} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"usn\" \n// //           type=\"text\" \n// //           placeholder=\"USN\" \n// //           value={formData.usn} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"email\" \n// //           type=\"email\" \n// //           placeholder=\"Email\" \n// //           value={formData.email} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"sem\" \n// //           type=\"number\" \n// //           placeholder=\"Semester\" \n// //           value={formData.sem} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"yearofgraduation\" \n// //           type=\"number\" \n// //           placeholder=\"Year of Graduation\" \n// //           value={formData.yearofgraduation} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <input \n// //           name=\"specialization\" \n// //           type=\"text\" \n// //           placeholder=\"Specialization\" \n// //           value={formData.specialization} \n// //           onChange={handleChange} \n// //           required \n// //           style={inputStyle} \n// //         />\n// //         <button type=\"submit\" style={buttonStyle}>Submit</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // // Inline styles for inputs and button\n// // const inputStyle = {\n// //   padding: '12px',\n// //   fontSize: '16px',\n// //   border: '1px solid #ddd',\n// //   borderRadius: '5px',\n// //   outline: 'none',\n// //   backgroundColor: '#f9f9f9',\n// //   transition: 'border-color 0.3s ease',\n// // };\n\n// // const buttonStyle = {\n// //   padding: '12px 20px',\n// //   fontSize: '16px',\n// //   backgroundColor: '#007bff',\n// //   color: 'white',\n// //   border: 'none',\n// //   borderRadius: '5px',\n// //   cursor: 'pointer',\n// //   transition: 'background-color 0.3s ease',\n// //   alignSelf: 'center',\n// // };\n\n// // export default StudentDetails;\n// import React, { useState } from \"react\"; \n// import { useNavigate } from \"react-router-dom\"; \n\n// const StudentDetails = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",          // Changed from studentname\n//     usn: \"\",\n//     email: \"\",\n//     semester: \"\",      // Changed from sem\n//     graduationYear: \"\", // Changed from yearofgraduation\n//     specialization: \"\",\n//   });\n\n//   const [submitted, setSubmitted] = useState(false);\n//   const [errorMessage, setErrorMessage] = useState(null); \n//   const navigate = useNavigate(); \n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setSubmitted(false);\n//     setErrorMessage(null);\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/students\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       if (response.ok) {\n//         setSubmitted(true);\n//         setTimeout(() => {\n//           navigate(\"/student/details-page\");\n//         }, 3000);\n//       } else {\n//         const errorData = await response.json();\n//         setErrorMessage(errorData.error || \"Submission failed. Try again.\");\n//       }\n//     } catch (error) {\n//       setErrorMessage(\"A network error occurred. Please check your connection.\");\n//     }\n//   };\n\n//   return (\n//     <div style={{\n//       maxWidth: '600px', \n//       margin: '50px auto', \n//       padding: '30px', \n//       backgroundColor: '#ffffff', \n//       borderRadius: '10px',\n//       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n//     }}>\n//       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\n//       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\n//       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n//         <input \n//           name=\"name\"                 // Changed from studentname\n//           type=\"text\" \n//           placeholder=\"Student Name\" \n//           value={formData.name}       // Changed from studentname\n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"usn\" \n//           type=\"text\" \n//           placeholder=\"USN\" \n//           value={formData.usn} \n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"email\" \n//           type=\"email\" \n//           placeholder=\"Email\" \n//           value={formData.email} \n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"semester\"             // Changed from sem\n//           type=\"number\" \n//           placeholder=\"Semester\" \n//           value={formData.semester}   // Changed from sem\n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"graduationYear\"      // Changed from yearofgraduation\n//           type=\"number\" \n//           placeholder=\"Year of Graduation\" \n//           value={formData.graduationYear}  // Changed from yearofgraduation\n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <input \n//           name=\"specialization\" \n//           type=\"text\" \n//           placeholder=\"Specialization\" \n//           value={formData.specialization} \n//           onChange={handleChange} \n//           required \n//           style={inputStyle} \n//         />\n//         <button type=\"submit\" style={buttonStyle}>Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // Inline styles remain unchanged\n// const inputStyle = {\n//   padding: '12px',\n//   fontSize: '16px',\n//   border: '1px solid #ddd',\n//   borderRadius: '5px',\n//   outline: 'none',\n//   backgroundColor: '#f9f9f9',\n//   transition: 'border-color 0.3s ease',\n// };\n\n// const buttonStyle = {\n//   padding: '12px 20px',\n//   fontSize: '16px',\n//   backgroundColor: '#007bff',\n//   color: 'white',\n//   border: 'none',\n//   borderRadius: '5px',\n//   cursor: 'pointer',\n//   transition: 'background-color 0.3s ease',\n//   alignSelf: 'center',\n// };\n\n// export default StudentDetails;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDetails = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    usn: \"\",\n    email: \"\",\n    semester: \"\",\n    graduationYear: \"\",\n    // Fixed field name\n    specialization: \"\"\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitted(false);\n    setErrorMessage(null);\n    try {\n      // Convert numbers before sending\n      const dataToSend = {\n        ...formData,\n        semester: Number(formData.semester),\n        graduationYear: Number(formData.graduationYear)\n      };\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(dataToSend)\n      });\n      if (response.ok) {\n        setSubmitted(true);\n        setTimeout(() => navigate(\"/student/details-page\"), 2000);\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || errorData.message || \"Submission failed. Please try again.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"Network error. Please check your connection.\");\n    }\n  };\n\n  // JSX remains the same with updated field names...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: \"Add Student Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#28a745\",\n        textAlign: 'center'\n      },\n      children: \"\\u2705 Details submitted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#dc3545\",\n        textAlign: 'center'\n      },\n      children: [\"\\u274C \", errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: formStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Student Name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"usn\",\n        type: \"text\",\n        placeholder: \"USN (e.g. 1VE20CS001)\",\n        value: formData.usn,\n        onChange: handleChange,\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email (e.g. name@example.com)\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"semester\",\n        type: \"number\",\n        placeholder: \"Semester (1-8)\",\n        value: formData.semester,\n        onChange: handleChange,\n        min: \"1\",\n        max: \"8\",\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"graduationYear\",\n        type: \"number\",\n        placeholder: \"Graduation Year (e.g. 2025)\",\n        value: formData.graduationYear,\n        onChange: handleChange,\n        min: \"2000\",\n        max: \"2030\",\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"specialization\",\n        type: \"text\",\n        placeholder: \"Specialization (e.g. Computer Science)\",\n        value: formData.specialization,\n        onChange: handleChange,\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: buttonStyle,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n\n// CSS styles (unchanged)\n_s(StudentDetails, \"pYFiFhvaRSxN9t8AD8O6fBdorDU=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDetails;\nconst containerStyle = {\n  maxWidth: '600px',\n  margin: '50px auto',\n  padding: '30px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\n};\nconst formStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '15px'\n};\nconst inputStyle = {\n  padding: '12px',\n  fontSize: '16px',\n  border: '1px solid #ddd',\n  borderRadius: '5px',\n  outline: 'none',\n  backgroundColor: '#f9f9f9',\n  transition: 'border-color 0.3s ease'\n};\nconst buttonStyle = {\n  padding: '12px 20px',\n  fontSize: '16px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  transition: 'background-color 0.3s ease',\n  alignSelf: 'center'\n};\nexport default StudentDetails;\nvar _c;\n$RefreshReg$(_c, \"StudentDetails\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","StudentDetails","_s","formData","setFormData","name","usn","email","semester","graduationYear","specialization","submitted","setSubmitted","errorMessage","setErrorMessage","navigate","handleChange","e","target","value","handleSubmit","preventDefault","dataToSend","Number","response","fetch","method","headers","body","JSON","stringify","ok","setTimeout","errorData","json","error","message","style","containerStyle","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","formStyle","type","placeholder","onChange","required","inputStyle","min","max","buttonStyle","_c","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","display","flexDirection","gap","fontSize","border","outline","transition","cursor","alignSelf","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/DB/DBMS/Frontend/src/pages/student/StudentDetails.js"],"sourcesContent":["// // import React, { useState } from \"react\"; \r\n// // import { useNavigate } from \"react-router-dom\"; \r\n\r\n// // const StudentDetails = () => {\r\n// //   const [formData, setFormData] = useState({\r\n// //     studentname: \"\",\r\n// //     usn: \"\",\r\n// //     email: \"\",\r\n// //     sem:\"\",\r\n// //     yearofgraduation: \"\",\r\n// //     specialization: \"\",\r\n// //   });\r\n\r\n// //   const [submitted, setSubmitted] = useState(false);\r\n// //   const [errorMessage, setErrorMessage] = useState(null); \r\n// //   const navigate = useNavigate(); \r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setSubmitted(false);\r\n// //     setErrorMessage(null);\r\n  \r\n// //     try {\r\n// //       const response = await fetch(\"http://localhost:5000/api/students\", {\r\n// //         method: \"POST\",\r\n// //         headers: {\r\n// //           \"Content-Type\": \"application/json\",\r\n// //         },\r\n// //         body: JSON.stringify(formData),\r\n// //       });\r\n  \r\n// //       if (response.ok) {\r\n// //         setSubmitted(true);\r\n// //         setTimeout(() => {\r\n// //           navigate(\"/student/details-page\"); // Redirect to the list page after submission\r\n// //         }, 3000);\r\n// //       } else {\r\n// //         const errorData = await response.json();\r\n// //         setErrorMessage(errorData.message || \"Submission failed. Try again.\");\r\n// //       }\r\n// //     } catch (error) {\r\n// //       setErrorMessage(\"A network error occurred. Please check your connection.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div style={{\r\n// //       maxWidth: '600px', \r\n// //       margin: '50px auto', \r\n// //       padding: '30px', \r\n// //       backgroundColor: '#ffffff', \r\n// //       borderRadius: '10px',\r\n// //       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n// //     }}>\r\n// //       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\r\n// //       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\r\n// //       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\r\n// //       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\r\n// //         <input \r\n// //           name=\"studentname\" \r\n// //           type=\"text\" \r\n// //           placeholder=\"Student Name\" \r\n// //           value={formData.studentname} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"usn\" \r\n// //           type=\"text\" \r\n// //           placeholder=\"USN\" \r\n// //           value={formData.usn} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"email\" \r\n// //           type=\"email\" \r\n// //           placeholder=\"Email\" \r\n// //           value={formData.email} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"sem\" \r\n// //           type=\"number\" \r\n// //           placeholder=\"Semester\" \r\n// //           value={formData.sem} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"yearofgraduation\" \r\n// //           type=\"number\" \r\n// //           placeholder=\"Year of Graduation\" \r\n// //           value={formData.yearofgraduation} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <input \r\n// //           name=\"specialization\" \r\n// //           type=\"text\" \r\n// //           placeholder=\"Specialization\" \r\n// //           value={formData.specialization} \r\n// //           onChange={handleChange} \r\n// //           required \r\n// //           style={inputStyle} \r\n// //         />\r\n// //         <button type=\"submit\" style={buttonStyle}>Submit</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // // Inline styles for inputs and button\r\n// // const inputStyle = {\r\n// //   padding: '12px',\r\n// //   fontSize: '16px',\r\n// //   border: '1px solid #ddd',\r\n// //   borderRadius: '5px',\r\n// //   outline: 'none',\r\n// //   backgroundColor: '#f9f9f9',\r\n// //   transition: 'border-color 0.3s ease',\r\n// // };\r\n\r\n// // const buttonStyle = {\r\n// //   padding: '12px 20px',\r\n// //   fontSize: '16px',\r\n// //   backgroundColor: '#007bff',\r\n// //   color: 'white',\r\n// //   border: 'none',\r\n// //   borderRadius: '5px',\r\n// //   cursor: 'pointer',\r\n// //   transition: 'background-color 0.3s ease',\r\n// //   alignSelf: 'center',\r\n// // };\r\n\r\n// // export default StudentDetails;\r\n// import React, { useState } from \"react\"; \r\n// import { useNavigate } from \"react-router-dom\"; \r\n\r\n// const StudentDetails = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",          // Changed from studentname\r\n//     usn: \"\",\r\n//     email: \"\",\r\n//     semester: \"\",      // Changed from sem\r\n//     graduationYear: \"\", // Changed from yearofgraduation\r\n//     specialization: \"\",\r\n//   });\r\n\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [errorMessage, setErrorMessage] = useState(null); \r\n//   const navigate = useNavigate(); \r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setSubmitted(false);\r\n//     setErrorMessage(null);\r\n  \r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/students\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n  \r\n//       if (response.ok) {\r\n//         setSubmitted(true);\r\n//         setTimeout(() => {\r\n//           navigate(\"/student/details-page\");\r\n//         }, 3000);\r\n//       } else {\r\n//         const errorData = await response.json();\r\n//         setErrorMessage(errorData.error || \"Submission failed. Try again.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage(\"A network error occurred. Please check your connection.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{\r\n//       maxWidth: '600px', \r\n//       margin: '50px auto', \r\n//       padding: '30px', \r\n//       backgroundColor: '#ffffff', \r\n//       borderRadius: '10px',\r\n//       boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n//     }}>\r\n//       <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\r\n//       {submitted && <p style={{ color: \"#28a745\", textAlign: 'center' }}>Details submitted successfully!</p>}\r\n//       {errorMessage && <p style={{ color: \"#dc3545\", textAlign: 'center' }}>{errorMessage}</p>}\r\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\r\n//         <input \r\n//           name=\"name\"                 // Changed from studentname\r\n//           type=\"text\" \r\n//           placeholder=\"Student Name\" \r\n//           value={formData.name}       // Changed from studentname\r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"usn\" \r\n//           type=\"text\" \r\n//           placeholder=\"USN\" \r\n//           value={formData.usn} \r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"email\" \r\n//           type=\"email\" \r\n//           placeholder=\"Email\" \r\n//           value={formData.email} \r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"semester\"             // Changed from sem\r\n//           type=\"number\" \r\n//           placeholder=\"Semester\" \r\n//           value={formData.semester}   // Changed from sem\r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"graduationYear\"      // Changed from yearofgraduation\r\n//           type=\"number\" \r\n//           placeholder=\"Year of Graduation\" \r\n//           value={formData.graduationYear}  // Changed from yearofgraduation\r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <input \r\n//           name=\"specialization\" \r\n//           type=\"text\" \r\n//           placeholder=\"Specialization\" \r\n//           value={formData.specialization} \r\n//           onChange={handleChange} \r\n//           required \r\n//           style={inputStyle} \r\n//         />\r\n//         <button type=\"submit\" style={buttonStyle}>Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Inline styles remain unchanged\r\n// const inputStyle = {\r\n//   padding: '12px',\r\n//   fontSize: '16px',\r\n//   border: '1px solid #ddd',\r\n//   borderRadius: '5px',\r\n//   outline: 'none',\r\n//   backgroundColor: '#f9f9f9',\r\n//   transition: 'border-color 0.3s ease',\r\n// };\r\n\r\n// const buttonStyle = {\r\n//   padding: '12px 20px',\r\n//   fontSize: '16px',\r\n//   backgroundColor: '#007bff',\r\n//   color: 'white',\r\n//   border: 'none',\r\n//   borderRadius: '5px',\r\n//   cursor: 'pointer',\r\n//   transition: 'background-color 0.3s ease',\r\n//   alignSelf: 'center',\r\n// };\r\n\r\n// export default StudentDetails;\r\n\r\nimport React, { useState } from \"react\"; \r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nconst StudentDetails = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    usn: \"\",\r\n    email: \"\",\r\n    semester: \"\",\r\n    graduationYear: \"\", // Fixed field name\r\n    specialization: \"\",\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null); \r\n  const navigate = useNavigate(); \r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(false);\r\n    setErrorMessage(null);\r\n  \r\n    try {\r\n      // Convert numbers before sending\r\n      const dataToSend = {\r\n        ...formData,\r\n        semester: Number(formData.semester),\r\n        graduationYear: Number(formData.graduationYear)\r\n      };\r\n      \r\n      const response = await fetch(\"http://localhost:5000/api/students\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setSubmitted(true);\r\n        setTimeout(() => navigate(\"/student/details-page\"), 2000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setErrorMessage(\r\n          errorData.error || \r\n          errorData.message || \r\n          \"Submission failed. Please try again.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Network error. Please check your connection.\");\r\n    }\r\n  };\r\n\r\n  // JSX remains the same with updated field names...\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Add Student Details</h2>\r\n      {submitted && (\r\n        <p style={{ color: \"#28a745\", textAlign: 'center' }}>\r\n          ✅ Details submitted successfully!\r\n        </p>\r\n      )}\r\n      {errorMessage && (\r\n        <p style={{ color: \"#dc3545\", textAlign: 'center' }}>\r\n          ❌ {errorMessage}\r\n        </p>\r\n      )}\r\n      <form onSubmit={handleSubmit} style={formStyle}>\r\n        <input \r\n          name=\"name\"\r\n          type=\"text\" \r\n          placeholder=\"Student Name\" \r\n          value={formData.name} \r\n          onChange={handleChange} \r\n          required \r\n          style={inputStyle} \r\n        />\r\n        <input \r\n          name=\"usn\" \r\n          type=\"text\" \r\n          placeholder=\"USN (e.g. 1VE20CS001)\" \r\n          value={formData.usn} \r\n          onChange={handleChange} \r\n          required \r\n          style={inputStyle} \r\n        />\r\n        <input \r\n          name=\"email\" \r\n          type=\"email\" \r\n          placeholder=\"Email (e.g. name@example.com)\" \r\n          value={formData.email} \r\n          onChange={handleChange} \r\n          required \r\n          style={inputStyle} \r\n        />\r\n        <input \r\n          name=\"semester\" \r\n          type=\"number\" \r\n          placeholder=\"Semester (1-8)\" \r\n          value={formData.semester} \r\n          onChange={handleChange} \r\n          min=\"1\"\r\n          max=\"8\"\r\n          required \r\n          style={inputStyle} \r\n        />\r\n        <input \r\n          name=\"graduationYear\" \r\n          type=\"number\" \r\n          placeholder=\"Graduation Year (e.g. 2025)\" \r\n          value={formData.graduationYear} \r\n          onChange={handleChange} \r\n          min=\"2000\"\r\n          max=\"2030\"\r\n          required \r\n          style={inputStyle} \r\n        />\r\n        <input \r\n          name=\"specialization\" \r\n          type=\"text\" \r\n          placeholder=\"Specialization (e.g. Computer Science)\" \r\n          value={formData.specialization} \r\n          onChange={handleChange} \r\n          required \r\n          style={inputStyle} \r\n        />\r\n        <button type=\"submit\" style={buttonStyle}>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// CSS styles (unchanged)\r\nconst containerStyle = {\r\n  maxWidth: '600px', \r\n  margin: '50px auto', \r\n  padding: '30px', \r\n  backgroundColor: '#ffffff', \r\n  borderRadius: '10px',\r\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n};\r\n\r\nconst formStyle = {\r\n  display: 'flex', \r\n  flexDirection: 'column', \r\n  gap: '15px'\r\n};\r\n\r\nconst inputStyle = {\r\n  padding: '12px',\r\n  fontSize: '16px',\r\n  border: '1px solid #ddd',\r\n  borderRadius: '5px',\r\n  outline: 'none',\r\n  backgroundColor: '#f9f9f9',\r\n  transition: 'border-color 0.3s ease',\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '12px 20px',\r\n  fontSize: '16px',\r\n  backgroundColor: '#007bff',\r\n  color: 'white',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  transition: 'background-color 0.3s ease',\r\n  alignSelf: 'center',\r\n};\r\n\r\nexport default StudentDetails;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}