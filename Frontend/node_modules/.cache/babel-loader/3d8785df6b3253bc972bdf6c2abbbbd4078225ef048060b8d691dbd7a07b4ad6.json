{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\DB\\\\DBMS\\\\Frontend\\\\src\\\\pages\\\\Dashboard2.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function FacultyDashboard() {\n//   const navigate = useNavigate();\n//   const [selectedOption, setSelectedOption] = useState(\"\");\n//   const [queryOutput, setQueryOutput] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(\"\");\n\n//   const handleDropdownChange = async (e) => {\n//     const selectedQuery = e.target.value;\n//     setSelectedOption(selectedQuery);\n//     setQueryOutput(null);\n//     setError(\"\");\n\n//     if (selectedQuery) {\n//       try {\n//         setLoading(true);\n//         const response = await fetch(\n//           `http://localhost:5000/api/faculty-dashboard/query/${encodeURIComponent(selectedQuery)}`\n//         );\n\n//         if (!response.ok) {\n//           const errorData = await response.json();\n//           throw new Error(errorData.message || `Server error: ${response.status}`);\n//         }\n\n//         const data = await response.json();\n\n//         if (data.success) {\n//           setQueryOutput(data.output);\n//         } else {\n//           throw new Error(data.message || \"Error fetching data\");\n//         }\n//       } catch (error) {\n//         setError(error.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n//   };\n\n//   // Function to render table from array data\n//   const renderTable = (data) => {\n//     if (!data || data.length === 0) {\n//       return <p>No data available.</p>;\n//     }\n\n//     const headers = Object.keys(data[0]);\n\n//     return (\n//       <div style={{ overflowX: \"auto\" }}>\n//         <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n//           <thead>\n//             <tr style={{ backgroundColor: \"#f2f2f2\" }}>\n//               {headers.map((header, idx) => (\n//                 <th \n//                   key={idx} \n//                   style={{ \n//                     padding: \"10px\", \n//                     textAlign: \"left\", \n//                     borderBottom: \"1px solid #ddd\",\n//                     fontWeight: \"bold\"\n//                   }}\n//                 >\n//                   {header}\n//                 </th>\n//               ))}\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {data.map((row, rowIdx) => (\n//               <tr \n//                 key={rowIdx} \n//                 style={{ \n//                   borderBottom: \"1px solid #ddd\",\n//                   backgroundColor: rowIdx % 2 === 0 ? \"#f9f9f9\" : \"white\"\n//                 }}\n//               >\n//                 {headers.map((header, colIdx) => (\n//                   <td \n//                     key={colIdx} \n//                     style={{ \n//                       padding: \"10px\", \n//                       textAlign: \"left\",\n//                       verticalAlign: \"top\"\n//                     }}\n//                   >\n//                     {Array.isArray(row[header]) \n//                       ? row[header].map((item, i) => (\n//                           <div key={i}>\n//                             {typeof item === 'object' \n//                               ? JSON.stringify(item) \n//                               : item}\n//                           </div>\n//                         ))\n//                       : (typeof row[header] === \"object\" \n//                           ? JSON.stringify(row[header]) \n//                           : row[header])\n//                     }\n//                   </td>\n//                 ))}\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         minHeight: \"100vh\",\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//         background: \"pink\",\n//         fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n//         padding: \"20px\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"90%\",\n//           maxWidth: \"1200px\",\n//           backgroundColor: \"white\",\n//           padding: \"30px\",\n//           borderRadius: \"10px\",\n//           boxShadow: \"0 4px 15px rgba(0, 0, 0, 0.2)\",\n//           textAlign: \"center\",\n//         }}\n//       >\n//         <h1 style={{ color: \"#333\", marginBottom: \"20px\" }}>Faculty Dashboard</h1>\n\n//         {/* Dropdown */}\n//         <div style={{ marginBottom: \"30px\" }}>\n//           <label\n//             htmlFor=\"dropdown\"\n//             style={{\n//               display: \"block\",\n//               marginBottom: \"10px\",\n//               fontWeight: \"bold\",\n//               fontSize: \"16px\",\n//               color: \"#4A4A4A\",\n//             }}\n//           >\n//             Select an Option:\n//           </label>\n//           <select\n//             id=\"dropdown\"\n//             value={selectedOption}\n//             onChange={handleDropdownChange}\n//             disabled={loading}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               fontSize: \"16px\",\n//               border: \"1px solid #ddd\",\n//               borderRadius: \"5px\",\n//               outline: \"none\",\n//               backgroundColor: \"#f9f9f9\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             <option value=\"\" disabled>\n//               -- Choose an option --\n//             </option>\n//             {[\n//               \"All Students\",\n//               \"All Recruiters\",\n//               \"Query for Students With Placement\",\n//               \"All skills\",\n//               \"Get all students with their skill\",\n//               \"Count the no of students in each specialization\",\n//               \"Get recruiters who have posted internships for specific skills\",\n//               \"Get the list of placements by company with details of job roles and salary package\",\n//               \"Get the total number of interviews conducted for each student by recruiter\",\n//             ].map((query, index) => (\n//               <option key={index} value={query}>\n//                 {query}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n\n//         {/* Loading and Error Indicators */}\n//         {loading && (\n//           <div style={{ margin: \"20px 0\", color: \"#007bff\" }}>\n//             Loading data...\n//           </div>\n//         )}\n\n//         {error && (\n//           <div style={{ \n//             padding: \"15px\", \n//             backgroundColor: \"#ffebee\", \n//             color: \"#b71c1c\",\n//             borderRadius: \"5px\",\n//             margin: \"20px 0\"\n//           }}>\n//             {error}\n//           </div>\n//         )}\n\n//         {/* Output Box */}\n//         <div\n//           style={{\n//             padding: \"20px\",\n//             border: \"1px solid #ccc\",\n//             borderRadius: \"10px\",\n//             backgroundColor: \"#f9f9f9\",\n//             boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.1)\",\n//             minHeight: \"100px\",\n//             maxHeight: \"600px\",\n//             overflowY: \"auto\",\n//           }}\n//         >\n//           {!loading && !error && queryOutput ? (\n//             Array.isArray(queryOutput) ? (\n//               renderTable(queryOutput)\n//             ) : (\n//               <pre>{JSON.stringify(queryOutput, null, 2)}</pre>\n//             )\n//           ) : !loading && !error && !queryOutput ? (\n//             <p style={{ fontSize: \"14px\", color: \"#aaa\", textAlign: \"center\" }}>\n//               Select an option from the dropdown to see the output.\n//             </p>\n//           ) : null}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default FacultyDashboard;\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FacultyDashboard() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [queryOutput, setQueryOutput] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleDropdownChange = async e => {\n    const selectedQuery = e.target.value;\n    setSelectedOption(selectedQuery);\n    setQueryOutput(null);\n    setError(\"\");\n    if (selectedQuery) {\n      try {\n        setLoading(true);\n        const response = await fetch(`http://localhost:5000/api/faculty-dashboard/query/${encodeURIComponent(selectedQuery)}`);\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || `Server error: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.success) {\n          setQueryOutput(data.output);\n        } else {\n          throw new Error(data.message || \"Error fetching data\");\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Function to sanitize data by removing internal properties\n  const sanitizeData = data => {\n    if (!data) return data;\n\n    // For arrays, process each item\n    if (Array.isArray(data)) {\n      return data.map(item => sanitizeData(item));\n    }\n\n    // For objects, remove internal properties\n    if (typeof data === 'object') {\n      const cleanData = {};\n      for (const key in data) {\n        // Skip internal properties\n        if (key === '__v' || key === '$__' || key === '_doc' || key === '$isNew') {\n          continue;\n        }\n\n        // Recursively sanitize nested objects/arrays\n        cleanData[key] = sanitizeData(data[key]);\n      }\n      return cleanData;\n    }\n\n    // Return primitives as-is\n    return data;\n  };\n\n  // Format cell values for display\n  const formatCellValue = value => {\n    if (value === null || value === undefined) {\n      return 'N/A';\n    }\n    if (Array.isArray(value)) {\n      if (value.length === 0) return 'Empty';\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          margin: 0,\n          padding: 0,\n          paddingLeft: '20px',\n          maxHeight: '150px',\n          overflowY: 'auto'\n        },\n        children: value.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '5px'\n          },\n          children: formatCellValue(item)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this);\n    }\n    if (typeof value === 'object') {\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          margin: 0,\n          whiteSpace: 'pre-wrap',\n          maxHeight: '150px',\n          overflowY: 'auto'\n        },\n        children: JSON.stringify(value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this);\n    }\n    return value.toString();\n  };\n\n  // Function to render table from array data\n  const renderTable = data => {\n    const cleanData = sanitizeData(data);\n    if (!cleanData || cleanData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 14\n      }, this);\n    }\n    const headers = Object.keys(cleanData[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: \"#f2f2f2\"\n            },\n            children: headers.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"10px\",\n                textAlign: \"left\",\n                borderBottom: \"1px solid #ddd\",\n                fontWeight: \"bold\",\n                position: 'sticky',\n                top: 0,\n                backgroundColor: '#f2f2f2'\n              },\n              children: header\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: cleanData.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: \"1px solid #ddd\",\n              backgroundColor: rowIdx % 2 === 0 ? \"#f9f9f9\" : \"white\"\n            },\n            children: headers.map((header, colIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\",\n                textAlign: \"left\",\n                verticalAlign: \"top\",\n                maxWidth: \"300px\",\n                overflow: \"hidden\"\n              },\n              children: formatCellValue(row[header])\n            }, colIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this))\n          }, rowIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      background: \"linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%)\",\n      fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        maxWidth: \"1200px\",\n        backgroundColor: \"rgba(255, 255, 255, 0.95)\",\n        padding: \"30px\",\n        borderRadius: \"15px\",\n        boxShadow: \"0 10px 30px rgba(0, 0, 0, 0.15)\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#333\",\n          marginBottom: \"25px\",\n          fontSize: \"2.5rem\"\n        },\n        children: \"Faculty Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dropdown\",\n          style: {\n            display: \"block\",\n            marginBottom: \"15px\",\n            fontWeight: \"bold\",\n            fontSize: \"18px\",\n            color: \"#4A4A4A\"\n          },\n          children: \"Select an Option:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dropdown\",\n          value: selectedOption,\n          onChange: handleDropdownChange,\n          disabled: loading,\n          style: {\n            width: \"100%\",\n            padding: \"12px 15px\",\n            fontSize: \"16px\",\n            border: \"2px solid #ddd\",\n            borderRadius: \"8px\",\n            outline: \"none\",\n            backgroundColor: \"#f9f9f9\",\n            cursor: \"pointer\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\",\n            transition: \"border-color 0.3s\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- Choose an option --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), [\"All Students\", \"All Recruiters\", \"Query for Students With Placement\", \"All skills\", \"Get all students with their skill\", \"Count the no of students in each specialization\", \"Get recruiters who have posted internships for specific skills\", \"Get the list of placements by company with details of job roles and salary package\", \"Get the total number of interviews conducted for each student by recruiter\"].map((query, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: query,\n            children: query\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"25px 0\",\n          color: \"#007bff\",\n          fontSize: \"18px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"15px\",\n          backgroundColor: \"#ffebee\",\n          color: \"#b71c1c\",\n          borderRadius: \"8px\",\n          margin: \"25px 0\",\n          borderLeft: \"4px solid #b71c1c\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\",\n          border: \"1px solid #ddd\",\n          borderRadius: \"10px\",\n          backgroundColor: \"#f9f9f9\",\n          boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.05)\",\n          minHeight: \"200px\",\n          maxHeight: \"600px\",\n          overflowY: \"auto\"\n        },\n        children: !loading && !error && queryOutput ? Array.isArray(queryOutput) ? renderTable(queryOutput) : /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            wordBreak: 'break-word'\n          },\n          children: JSON.stringify(sanitizeData(queryOutput), null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 15\n        }, this) : !loading && !error && !queryOutput ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"16px\",\n            color: \"#aaa\",\n            textAlign: \"center\",\n            padding: \"20px\"\n          },\n          children: \"Select an option from the dropdown to see the results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          \n          .spinner {\n            border: 4px solid rgba(0, 0, 0, 0.1);\n            border-top: 4px solid #007bff;\n            border-radius: 50%;\n            width: 24px;\n            height: 24px;\n            animation: spin 1s linear infinite;\n          }\n          \n          select:hover {\n            border-color: #999;\n          }\n          \n          select:focus {\n            border-color: #007bff;\n            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n          }\n          \n          pre {\n            background-color: #f8f8f8;\n            padding: 15px;\n            border-radius: 5px;\n            border-left: 4px solid #007bff;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n_s(FacultyDashboard, \"6IX+XRrTYga6jJOtc1i7fPfJEPc=\");\n_c = FacultyDashboard;\nexport default FacultyDashboard;\nvar _c;\n$RefreshReg$(_c, \"FacultyDashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FacultyDashboard","_s","selectedOption","setSelectedOption","queryOutput","setQueryOutput","loading","setLoading","error","setError","handleDropdownChange","e","selectedQuery","target","value","response","fetch","encodeURIComponent","ok","errorData","json","Error","message","status","data","success","output","sanitizeData","Array","isArray","map","item","cleanData","key","formatCellValue","undefined","length","style","margin","padding","paddingLeft","maxHeight","overflowY","children","i","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","JSON","stringify","toString","renderTable","headers","Object","keys","overflowX","width","borderCollapse","backgroundColor","header","idx","textAlign","borderBottom","fontWeight","position","top","row","rowIdx","colIdx","verticalAlign","maxWidth","overflow","minHeight","display","flexDirection","alignItems","justifyContent","background","fontFamily","borderRadius","boxShadow","color","fontSize","htmlFor","id","onChange","disabled","border","outline","cursor","transition","query","index","className","marginLeft","borderLeft","wordBreak","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/DB/DBMS/Frontend/src/pages/Dashboard2.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function FacultyDashboard() {\r\n//   const navigate = useNavigate();\r\n//   const [selectedOption, setSelectedOption] = useState(\"\");\r\n//   const [queryOutput, setQueryOutput] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleDropdownChange = async (e) => {\r\n//     const selectedQuery = e.target.value;\r\n//     setSelectedOption(selectedQuery);\r\n//     setQueryOutput(null);\r\n//     setError(\"\");\r\n\r\n//     if (selectedQuery) {\r\n//       try {\r\n//         setLoading(true);\r\n//         const response = await fetch(\r\n//           `http://localhost:5000/api/faculty-dashboard/query/${encodeURIComponent(selectedQuery)}`\r\n//         );\r\n\r\n//         if (!response.ok) {\r\n//           const errorData = await response.json();\r\n//           throw new Error(errorData.message || `Server error: ${response.status}`);\r\n//         }\r\n\r\n//         const data = await response.json();\r\n        \r\n//         if (data.success) {\r\n//           setQueryOutput(data.output);\r\n//         } else {\r\n//           throw new Error(data.message || \"Error fetching data\");\r\n//         }\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // Function to render table from array data\r\n//   const renderTable = (data) => {\r\n//     if (!data || data.length === 0) {\r\n//       return <p>No data available.</p>;\r\n//     }\r\n\r\n//     const headers = Object.keys(data[0]);\r\n\r\n//     return (\r\n//       <div style={{ overflowX: \"auto\" }}>\r\n//         <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n//           <thead>\r\n//             <tr style={{ backgroundColor: \"#f2f2f2\" }}>\r\n//               {headers.map((header, idx) => (\r\n//                 <th \r\n//                   key={idx} \r\n//                   style={{ \r\n//                     padding: \"10px\", \r\n//                     textAlign: \"left\", \r\n//                     borderBottom: \"1px solid #ddd\",\r\n//                     fontWeight: \"bold\"\r\n//                   }}\r\n//                 >\r\n//                   {header}\r\n//                 </th>\r\n//               ))}\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {data.map((row, rowIdx) => (\r\n//               <tr \r\n//                 key={rowIdx} \r\n//                 style={{ \r\n//                   borderBottom: \"1px solid #ddd\",\r\n//                   backgroundColor: rowIdx % 2 === 0 ? \"#f9f9f9\" : \"white\"\r\n//                 }}\r\n//               >\r\n//                 {headers.map((header, colIdx) => (\r\n//                   <td \r\n//                     key={colIdx} \r\n//                     style={{ \r\n//                       padding: \"10px\", \r\n//                       textAlign: \"left\",\r\n//                       verticalAlign: \"top\"\r\n//                     }}\r\n//                   >\r\n//                     {Array.isArray(row[header]) \r\n//                       ? row[header].map((item, i) => (\r\n//                           <div key={i}>\r\n//                             {typeof item === 'object' \r\n//                               ? JSON.stringify(item) \r\n//                               : item}\r\n//                           </div>\r\n//                         ))\r\n//                       : (typeof row[header] === \"object\" \r\n//                           ? JSON.stringify(row[header]) \r\n//                           : row[header])\r\n//                     }\r\n//                   </td>\r\n//                 ))}\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         minHeight: \"100vh\",\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"center\",\r\n//         background: \"pink\",\r\n//         fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n//         padding: \"20px\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"90%\",\r\n//           maxWidth: \"1200px\",\r\n//           backgroundColor: \"white\",\r\n//           padding: \"30px\",\r\n//           borderRadius: \"10px\",\r\n//           boxShadow: \"0 4px 15px rgba(0, 0, 0, 0.2)\",\r\n//           textAlign: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ color: \"#333\", marginBottom: \"20px\" }}>Faculty Dashboard</h1>\r\n\r\n//         {/* Dropdown */}\r\n//         <div style={{ marginBottom: \"30px\" }}>\r\n//           <label\r\n//             htmlFor=\"dropdown\"\r\n//             style={{\r\n//               display: \"block\",\r\n//               marginBottom: \"10px\",\r\n//               fontWeight: \"bold\",\r\n//               fontSize: \"16px\",\r\n//               color: \"#4A4A4A\",\r\n//             }}\r\n//           >\r\n//             Select an Option:\r\n//           </label>\r\n//           <select\r\n//             id=\"dropdown\"\r\n//             value={selectedOption}\r\n//             onChange={handleDropdownChange}\r\n//             disabled={loading}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               fontSize: \"16px\",\r\n//               border: \"1px solid #ddd\",\r\n//               borderRadius: \"5px\",\r\n//               outline: \"none\",\r\n//               backgroundColor: \"#f9f9f9\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             <option value=\"\" disabled>\r\n//               -- Choose an option --\r\n//             </option>\r\n//             {[\r\n//               \"All Students\",\r\n//               \"All Recruiters\",\r\n//               \"Query for Students With Placement\",\r\n//               \"All skills\",\r\n//               \"Get all students with their skill\",\r\n//               \"Count the no of students in each specialization\",\r\n//               \"Get recruiters who have posted internships for specific skills\",\r\n//               \"Get the list of placements by company with details of job roles and salary package\",\r\n//               \"Get the total number of interviews conducted for each student by recruiter\",\r\n//             ].map((query, index) => (\r\n//               <option key={index} value={query}>\r\n//                 {query}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Loading and Error Indicators */}\r\n//         {loading && (\r\n//           <div style={{ margin: \"20px 0\", color: \"#007bff\" }}>\r\n//             Loading data...\r\n//           </div>\r\n//         )}\r\n        \r\n//         {error && (\r\n//           <div style={{ \r\n//             padding: \"15px\", \r\n//             backgroundColor: \"#ffebee\", \r\n//             color: \"#b71c1c\",\r\n//             borderRadius: \"5px\",\r\n//             margin: \"20px 0\"\r\n//           }}>\r\n//             {error}\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Output Box */}\r\n//         <div\r\n//           style={{\r\n//             padding: \"20px\",\r\n//             border: \"1px solid #ccc\",\r\n//             borderRadius: \"10px\",\r\n//             backgroundColor: \"#f9f9f9\",\r\n//             boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.1)\",\r\n//             minHeight: \"100px\",\r\n//             maxHeight: \"600px\",\r\n//             overflowY: \"auto\",\r\n//           }}\r\n//         >\r\n//           {!loading && !error && queryOutput ? (\r\n//             Array.isArray(queryOutput) ? (\r\n//               renderTable(queryOutput)\r\n//             ) : (\r\n//               <pre>{JSON.stringify(queryOutput, null, 2)}</pre>\r\n//             )\r\n//           ) : !loading && !error && !queryOutput ? (\r\n//             <p style={{ fontSize: \"14px\", color: \"#aaa\", textAlign: \"center\" }}>\r\n//               Select an option from the dropdown to see the output.\r\n//             </p>\r\n//           ) : null}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FacultyDashboard;\r\nimport React, { useState } from \"react\";\r\n\r\nfunction FacultyDashboard() {\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [queryOutput, setQueryOutput] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleDropdownChange = async (e) => {\r\n    const selectedQuery = e.target.value;\r\n    setSelectedOption(selectedQuery);\r\n    setQueryOutput(null);\r\n    setError(\"\");\r\n\r\n    if (selectedQuery) {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/faculty-dashboard/query/${encodeURIComponent(selectedQuery)}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.message || `Server error: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (data.success) {\r\n          setQueryOutput(data.output);\r\n        } else {\r\n          throw new Error(data.message || \"Error fetching data\");\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to sanitize data by removing internal properties\r\n  const sanitizeData = (data) => {\r\n    if (!data) return data;\r\n    \r\n    // For arrays, process each item\r\n    if (Array.isArray(data)) {\r\n      return data.map(item => sanitizeData(item));\r\n    }\r\n    \r\n    // For objects, remove internal properties\r\n    if (typeof data === 'object') {\r\n      const cleanData = {};\r\n      for (const key in data) {\r\n        // Skip internal properties\r\n        if (key === '__v' || key === '$__' || key === '_doc' || key === '$isNew') {\r\n          continue;\r\n        }\r\n        \r\n        // Recursively sanitize nested objects/arrays\r\n        cleanData[key] = sanitizeData(data[key]);\r\n      }\r\n      return cleanData;\r\n    }\r\n    \r\n    // Return primitives as-is\r\n    return data;\r\n  };\r\n\r\n  // Format cell values for display\r\n  const formatCellValue = (value) => {\r\n    if (value === null || value === undefined) {\r\n      return 'N/A';\r\n    }\r\n    \r\n    if (Array.isArray(value)) {\r\n      if (value.length === 0) return 'Empty';\r\n      \r\n      return (\r\n        <ul style={{ \r\n          margin: 0, \r\n          padding: 0, \r\n          paddingLeft: '20px',\r\n          maxHeight: '150px',\r\n          overflowY: 'auto'\r\n        }}>\r\n          {value.map((item, i) => (\r\n            <li key={i} style={{ marginBottom: '5px' }}>\r\n              {formatCellValue(item)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n    \r\n    if (typeof value === 'object') {\r\n      return (\r\n        <pre style={{ \r\n          margin: 0, \r\n          whiteSpace: 'pre-wrap',\r\n          maxHeight: '150px',\r\n          overflowY: 'auto'\r\n        }}>\r\n          {JSON.stringify(value, null, 2)}\r\n        </pre>\r\n      );\r\n    }\r\n    \r\n    return value.toString();\r\n  };\r\n\r\n  // Function to render table from array data\r\n  const renderTable = (data) => {\r\n    const cleanData = sanitizeData(data);\r\n    \r\n    if (!cleanData || cleanData.length === 0) {\r\n      return <p>No data available.</p>;\r\n    }\r\n\r\n    const headers = Object.keys(cleanData[0]);\r\n\r\n    return (\r\n      <div style={{ overflowX: \"auto\" }}>\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n          <thead>\r\n            <tr style={{ backgroundColor: \"#f2f2f2\" }}>\r\n              {headers.map((header, idx) => (\r\n                <th \r\n                  key={idx} \r\n                  style={{ \r\n                    padding: \"10px\", \r\n                    textAlign: \"left\", \r\n                    borderBottom: \"1px solid #ddd\",\r\n                    fontWeight: \"bold\",\r\n                    position: 'sticky',\r\n                    top: 0,\r\n                    backgroundColor: '#f2f2f2'\r\n                  }}\r\n                >\r\n                  {header}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cleanData.map((row, rowIdx) => (\r\n              <tr \r\n                key={rowIdx} \r\n                style={{ \r\n                  borderBottom: \"1px solid #ddd\",\r\n                  backgroundColor: rowIdx % 2 === 0 ? \"#f9f9f9\" : \"white\"\r\n                }}\r\n              >\r\n                {headers.map((header, colIdx) => (\r\n                  <td \r\n                    key={colIdx} \r\n                    style={{ \r\n                      padding: \"10px\", \r\n                      textAlign: \"left\",\r\n                      verticalAlign: \"top\",\r\n                      maxWidth: \"300px\",\r\n                      overflow: \"hidden\"\r\n                    }}\r\n                  >\r\n                    {formatCellValue(row[header])}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        background: \"linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%)\",\r\n        fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"90%\",\r\n          maxWidth: \"1200px\",\r\n          backgroundColor: \"rgba(255, 255, 255, 0.95)\",\r\n          padding: \"30px\",\r\n          borderRadius: \"15px\",\r\n          boxShadow: \"0 10px 30px rgba(0, 0, 0, 0.15)\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ color: \"#333\", marginBottom: \"25px\", fontSize: \"2.5rem\" }}>\r\n          Faculty Dashboard\r\n        </h1>\r\n\r\n        {/* Dropdown */}\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          <label\r\n            htmlFor=\"dropdown\"\r\n            style={{\r\n              display: \"block\",\r\n              marginBottom: \"15px\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"18px\",\r\n              color: \"#4A4A4A\",\r\n            }}\r\n          >\r\n            Select an Option:\r\n          </label>\r\n          <select\r\n            id=\"dropdown\"\r\n            value={selectedOption}\r\n            onChange={handleDropdownChange}\r\n            disabled={loading}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"12px 15px\",\r\n              fontSize: \"16px\",\r\n              border: \"2px solid #ddd\",\r\n              borderRadius: \"8px\",\r\n              outline: \"none\",\r\n              backgroundColor: \"#f9f9f9\",\r\n              cursor: \"pointer\",\r\n              boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\",\r\n              transition: \"border-color 0.3s\",\r\n            }}\r\n          >\r\n            <option value=\"\" disabled>\r\n              -- Choose an option --\r\n            </option>\r\n            {[\r\n              \"All Students\",\r\n              \"All Recruiters\",\r\n              \"Query for Students With Placement\",\r\n              \"All skills\",\r\n              \"Get all students with their skill\",\r\n              \"Count the no of students in each specialization\",\r\n              \"Get recruiters who have posted internships for specific skills\",\r\n              \"Get the list of placements by company with details of job roles and salary package\",\r\n              \"Get the total number of interviews conducted for each student by recruiter\",\r\n            ].map((query, index) => (\r\n              <option key={index} value={query}>\r\n                {query}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Loading and Error Indicators */}\r\n        {loading && (\r\n          <div style={{ \r\n            margin: \"25px 0\", \r\n            color: \"#007bff\",\r\n            fontSize: \"18px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}>\r\n            <div className=\"spinner\"></div>\r\n            <span style={{ marginLeft: \"10px\" }}>Loading data...</span>\r\n          </div>\r\n        )}\r\n        \r\n        {error && (\r\n          <div style={{ \r\n            padding: \"15px\", \r\n            backgroundColor: \"#ffebee\", \r\n            color: \"#b71c1c\",\r\n            borderRadius: \"8px\",\r\n            margin: \"25px 0\",\r\n            borderLeft: \"4px solid #b71c1c\"\r\n          }}>\r\n            <strong>Error:</strong> {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Output Box */}\r\n        <div\r\n          style={{\r\n            padding: \"20px\",\r\n            border: \"1px solid #ddd\",\r\n            borderRadius: \"10px\",\r\n            backgroundColor: \"#f9f9f9\",\r\n            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.05)\",\r\n            minHeight: \"200px\",\r\n            maxHeight: \"600px\",\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {!loading && !error && queryOutput ? (\r\n            Array.isArray(queryOutput) ? (\r\n              renderTable(queryOutput)\r\n            ) : (\r\n              <pre style={{ \r\n                whiteSpace: 'pre-wrap',\r\n                wordBreak: 'break-word'\r\n              }}>\r\n                {JSON.stringify(sanitizeData(queryOutput), null, 2)}\r\n              </pre>\r\n            )\r\n          ) : !loading && !error && !queryOutput ? (\r\n            <p style={{ \r\n              fontSize: \"16px\", \r\n              color: \"#aaa\", \r\n              textAlign: \"center\",\r\n              padding: \"20px\"\r\n            }}>\r\n              Select an option from the dropdown to see the results\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      \r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n          \r\n          .spinner {\r\n            border: 4px solid rgba(0, 0, 0, 0.1);\r\n            border-top: 4px solid #007bff;\r\n            border-radius: 50%;\r\n            width: 24px;\r\n            height: 24px;\r\n            animation: spin 1s linear infinite;\r\n          }\r\n          \r\n          select:hover {\r\n            border-color: #999;\r\n          }\r\n          \r\n          select:focus {\r\n            border-color: #007bff;\r\n            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\r\n          }\r\n          \r\n          pre {\r\n            background-color: #f8f8f8;\r\n            padding: 15px;\r\n            border-radius: 5px;\r\n            border-left: 4px solid #007bff;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FacultyDashboard;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEx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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}